[
    {
        "id": "b4a9d9fc0fb382cd",
        "type": "tab",
        "label": "DI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bad0d5e8ce8cf0c6",
        "type": "tab",
        "label": "DO",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e93be114ec7eee96",
        "type": "tab",
        "label": "AI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3e956768f5245111",
        "type": "tab",
        "label": "Vannes",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d9f73d01aefd6cf4",
        "type": "tab",
        "label": "Courbe de chauffe",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1cbfa6c610f9a210",
        "type": "tab",
        "label": "Système",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0fba407004275a36",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "edacb78f.e46bb8",
        "type": "serial-port",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false
    },
    {
        "id": "ee5cd5699662a4d3",
        "type": "mqtt-broker",
        "name": "mqtt",
        "broker": "192.168.1.11",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "64fcfd0b7995f301",
        "type": "websocket-listener",
        "path": "/ws/local/in",
        "wholemsg": "false"
    },
    {
        "id": "c2ee6021e4c07ace",
        "type": "websocket-listener",
        "path": "/ws/local/out",
        "wholemsg": "false"
    },
    {
        "id": "79f4d5d419f6e067",
        "type": "websocket-listener",
        "path": "ws://127.0.0.1:1880/ws/local/in",
        "wholemsg": "false"
    },
    {
        "id": "73ab76106c31c746",
        "type": "websocket-listener",
        "path": "ws://127.0.0.1:1880/ws/local/out",
        "wholemsg": "false"
    },
    {
        "id": "3ff0ab241f184b5d",
        "type": "websocket-listener",
        "path": "ws://192.168.178.100:2881/ws/remote/in",
        "wholemsg": "false"
    },
    {
        "id": "6afcbed948533e70",
        "type": "websocket-listener",
        "path": "ws://192.168.178.136:80",
        "wholemsg": "false"
    },
    {
        "id": "da3d850311320801",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "21744230.c4774e",
        "type": "ui_tab",
        "name": "Mon Arduino",
        "icon": "dashboard"
    },
    {
        "id": "f8cc30c938a0142e",
        "type": "ui_tab",
        "name": "Chauffage",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dc0d06f47293dbc0",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d7901f40.2659d",
        "type": "ui_tab",
        "name": "Charts",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "21394d77.4f7fe2",
        "type": "ui_group",
        "name": "Jauge",
        "tab": "21744230.c4774e",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9a0face5.d762e8",
        "type": "ui_group",
        "name": "Niveau",
        "tab": "21744230.c4774e",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f35c38ff.36261",
        "type": "ui_group",
        "name": "Trame",
        "tab": "21744230.c4774e",
        "order": 5,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "93b7dedd.2373d",
        "type": "ui_group",
        "name": "Les LEDs",
        "tab": "21744230.c4774e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "cfbca1bb.7a494",
        "type": "ui_group",
        "name": "Board",
        "tab": "21744230.c4774e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a3d953c2586eeab6",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "dc0d06f47293dbc0",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5c20945fc7a6e944",
        "type": "ui_group",
        "name": "Default",
        "tab": "dc0d06f47293dbc0",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "60ca80c6decd288a",
        "type": "ui_group",
        "name": "Courbe chauffage",
        "tab": "f8cc30c938a0142e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2332cad7958df7f2",
        "type": "ui_group",
        "name": "Vannes",
        "tab": "f8cc30c938a0142e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ac41474508e512e",
        "type": "ui_group",
        "name": "Sondes",
        "tab": "f8cc30c938a0142e",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b8afcfa2a2fbe81e",
        "type": "ui_group",
        "name": "test",
        "tab": "f8cc30c938a0142e",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "70601cfeaa15154b",
        "type": "ui_group",
        "name": "Chaudière",
        "tab": "f8cc30c938a0142e",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3e7a3cf8909ee831",
        "type": "ui_group",
        "name": "Accumulateur",
        "tab": "f8cc30c938a0142e",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "89749fb7.87f01",
        "type": "ui_group",
        "name": "Charts",
        "tab": "d7901f40.2659d",
        "order": 2,
        "disp": false,
        "width": "6"
    },
    {
        "id": "ab397e95.29ebe",
        "type": "ui_group",
        "name": "Inputs",
        "tab": "d7901f40.2659d",
        "order": 1,
        "disp": false,
        "width": "6"
    },
    {
        "id": "4e7edda4.417004",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "d7901f40.2659d",
        "order": 3,
        "disp": false,
        "width": "6"
    },
    {
        "id": "cfce575c6711bc96",
        "type": "arduino-board",
        "device": "/dev/ttyUSB0",
        "name": "Arduino",
        "samplingInt": "",
        "log2consol": false
    },
    {
        "id": "1eefafb17ac9eb3a",
        "type": "ui-base",
        "name": "Chauffage",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-control",
            "ui-notification"
        ],
        "showPathInSidebar": false,
        "headerContent": "dashboard",
        "navigationStyle": "icon",
        "titleBarStyle": "hidden",
        "showReconnectNotification": false,
        "notificationDisplayTime": 5,
        "showDisconnectNotification": false,
        "allowInstall": true
    },
    {
        "id": "59ba092d0a2ecbbe",
        "type": "ui-theme",
        "name": "Theme Name",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094ce",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        }
    },
    {
        "id": "c39df7bfefa4dedc",
        "type": "ui-page",
        "name": "Main",
        "ui": "1eefafb17ac9eb3a",
        "path": "/",
        "icon": "heating-coil",
        "layout": "grid",
        "theme": "59ba092d0a2ecbbe",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "c842328fcbb96582",
        "type": "ui-group",
        "name": "Environnement",
        "page": "c39df7bfefa4dedc",
        "width": "6",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "a5986c3613f86bbc",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": false,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": ": ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "default",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": false
    },
    {
        "id": "8846941fd0ee0b4d",
        "type": "ha-device-config",
        "name": "RPC",
        "hwVersion": "",
        "manufacturer": "Node-RED",
        "model": "",
        "swVersion": ""
    },
    {
        "id": "b895c8447c24bf3d",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "switch 2",
        "version": "6",
        "entityType": "switch",
        "haConfig": [
            {
                "property": "name",
                "value": "swit 2"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "c8b43f2e06c4ab65",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "sens",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "time"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "4e375c64d933c529",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "bin",
        "version": "6",
        "entityType": "binary_sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "bin"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "970366e645f206a4",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "btn",
        "version": "6",
        "entityType": "button",
        "haConfig": [
            {
                "property": "name",
                "value": "btn"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "96a45e815f473778",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "TLD",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "TLD"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "temperature"
            },
            {
                "property": "unit_of_measurement",
                "value": "°C"
            },
            {
                "property": "state_class",
                "value": "measurement"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "9795ad6a276e4b41",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "TLR",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "TLR"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "temperature"
            },
            {
                "property": "unit_of_measurement",
                "value": "°C"
            },
            {
                "property": "state_class",
                "value": "measurement"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "0abbcff6aba02d30",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "TCD",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "TCD"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "temperature"
            },
            {
                "property": "unit_of_measurement",
                "value": "°C"
            },
            {
                "property": "state_class",
                "value": "measurement"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "b2843d8bd06d6838",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "TCR",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "TCR"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "temperature"
            },
            {
                "property": "unit_of_measurement",
                "value": "°C"
            },
            {
                "property": "state_class",
                "value": "measurement"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "523f866a941ced7a",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "TAD",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "TAD"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "temperature"
            },
            {
                "property": "unit_of_measurement",
                "value": "°C"
            },
            {
                "property": "state_class",
                "value": "measurement"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "a62c4e513914fc49",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "TAR",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "TAR"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "temperature"
            },
            {
                "property": "unit_of_measurement",
                "value": "°C"
            },
            {
                "property": "state_class",
                "value": "measurement"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "880f1fb308a18dfe",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "TA1",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "TA1"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "temperature"
            },
            {
                "property": "unit_of_measurement",
                "value": "°C"
            },
            {
                "property": "state_class",
                "value": "measurement"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "ef77d95385e8392d",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "TA2",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "TA2"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "temperature"
            },
            {
                "property": "unit_of_measurement",
                "value": "°C"
            },
            {
                "property": "state_class",
                "value": "measurement"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "9a43012384bbadb9",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "CLY",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "CLY"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": "%"
            },
            {
                "property": "state_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "20c5e4ed7e69d462",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "CCY",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "CCY"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": "%"
            },
            {
                "property": "state_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "83881b320c9c2553",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "CCT",
        "version": "6",
        "entityType": "binary_sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "CCT"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "door"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "ba0a1398b9454b80",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "CCA",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "CCA"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "duration"
            },
            {
                "property": "unit_of_measurement",
                "value": "s"
            },
            {
                "property": "state_class",
                "value": "total_increasing"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "7c830c57c4b63de6",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "CC alm",
        "version": "6",
        "entityType": "binary_sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "CC alm"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "problem"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "b4a654fa94dfc54b",
        "type": "ha-entity-config",
        "server": "a5986c3613f86bbc",
        "deviceConfig": "8846941fd0ee0b4d",
        "name": "CCE",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "CCE"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "6003beaf3e655f88",
        "type": "ui-group",
        "name": "Chauffage",
        "page": "c39df7bfefa4dedc",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "51713a7681769857",
        "type": "ui-group",
        "name": "Accumulateur",
        "page": "c39df7bfefa4dedc",
        "width": 6,
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9d8bfd7e0d216779",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#15617e",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "c8cec2b67cc833d7",
        "type": "ui-page",
        "name": "pour test",
        "ui": "1eefafb17ac9eb3a",
        "path": "/test",
        "icon": "hard-hat",
        "layout": "notebook",
        "theme": "9d8bfd7e0d216779",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 4,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "45f5ebcd30441960",
        "type": "ui-group",
        "name": "Default Value",
        "page": "c8cec2b67cc833d7",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "bacaa95877a7dfb6",
        "type": "ui-group",
        "name": "Solaire",
        "page": "c39df7bfefa4dedc",
        "width": 6,
        "height": 1,
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e21b1c9b58ba65f6",
        "type": "ui-link",
        "name": "Node-RED",
        "ui": "1eefafb17ac9eb3a",
        "path": "http://192.168.1.20:1880/",
        "icon": "tools",
        "order": 3,
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "2f1d77c8b1871c36",
        "type": "ui-page",
        "name": "Automation",
        "ui": "1eefafb17ac9eb3a",
        "path": "/automation",
        "icon": "robot",
        "layout": "grid",
        "theme": "59ba092d0a2ecbbe",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "fbe427445467dcba",
        "type": "inject",
        "z": "b4a9d9fc0fb382cd",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 720,
        "wires": [
            [
                "4ee897f8cff0877c"
            ]
        ]
    },
    {
        "id": "8f200726a9f64460",
        "type": "inject",
        "z": "b4a9d9fc0fb382cd",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 110,
        "y": 760,
        "wires": [
            [
                "4ee897f8cff0877c"
            ]
        ]
    },
    {
        "id": "927eedc6f81757a2",
        "type": "debug",
        "z": "b4a9d9fc0fb382cd",
        "name": "debug Arduino",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1120,
        "wires": []
    },
    {
        "id": "19bfc02353105b91",
        "type": "comment",
        "z": "b4a9d9fc0fb382cd",
        "name": "Réception signaux depuis Arduino",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "5cfb9a37ff23091d",
        "type": "debug",
        "z": "b4a9d9fc0fb382cd",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e51edd9918cb0505",
        "type": "function",
        "z": "b4a9d9fc0fb382cd",
        "name": "time count",
        "func": "let temps = context.get(\"temps\");\nlet min = 0.1 // en dessous, pas compatbilisé\nlet max = 120  // au dessus, pas comptabilisé\n\nif (msg.payload == 0)\n    context.set(\"temps\", Date.now());\n\nif (msg.payload == 1) {\n    msg.payload = (Date.now() - context.get(\"temps\")) / 1000;\n    if (msg.payload > max || msg.payload < min)\n        return;\n    return msg;\n}\n\nreturn;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 500,
        "wires": [
            [
                "b3c1729260c6e2f7"
            ]
        ]
    },
    {
        "id": "eac996f3dcb6a3e4",
        "type": "ui_statetrail",
        "z": "b4a9d9fc0fb382cd",
        "group": "70601cfeaa15154b",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "CCE",
        "label": "",
        "states": [
            {
                "state": 0,
                "col": "#009933",
                "t": "num",
                "label": ""
            },
            {
                "state": 1,
                "col": "#999999",
                "t": "num",
                "label": ""
            }
        ],
        "periodLimit": "5",
        "periodLimitUnit": "60",
        "timeformat": "HH:mm:ss",
        "tickmarks": 4,
        "persist": false,
        "legend": "1",
        "combine": false,
        "blanklabel": "",
        "x": 510,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "6db06f92cc370cf5",
        "type": "ui_statetrail",
        "z": "b4a9d9fc0fb382cd",
        "group": "70601cfeaa15154b",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "CCA",
        "label": "",
        "states": [
            {
                "state": 0,
                "col": "#009933",
                "t": "num",
                "label": ""
            },
            {
                "state": 1,
                "col": "#999999",
                "t": "num",
                "label": ""
            }
        ],
        "periodLimit": "5",
        "periodLimitUnit": "60",
        "timeformat": "HH:mm:ss",
        "tickmarks": 4,
        "persist": false,
        "legend": "0",
        "combine": false,
        "blanklabel": "",
        "x": 510,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b6cadc40055a8bad",
        "type": "mqtt out",
        "z": "b4a9d9fc0fb382cd",
        "name": "",
        "topic": "RPC/test",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ee5cd5699662a4d3",
        "x": 1320,
        "y": 720,
        "wires": []
    },
    {
        "id": "97bd2519543687b1",
        "type": "inject",
        "z": "b4a9d9fc0fb382cd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 1150,
        "y": 720,
        "wires": [
            [
                "b6cadc40055a8bad"
            ]
        ]
    },
    {
        "id": "3aefa5ebd983ce52",
        "type": "inject",
        "z": "b4a9d9fc0fb382cd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 1150,
        "y": 760,
        "wires": [
            [
                "b6cadc40055a8bad"
            ]
        ]
    },
    {
        "id": "10a120c66868afc0",
        "type": "ui_statetrail",
        "z": "b4a9d9fc0fb382cd",
        "group": "70601cfeaa15154b",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "CCT",
        "label": "",
        "states": [
            {
                "state": 0,
                "col": "#009933",
                "t": "num",
                "label": ""
            },
            {
                "state": 1,
                "col": "#999999",
                "t": "num",
                "label": ""
            }
        ],
        "periodLimit": "24",
        "periodLimitUnit": "3600",
        "timeformat": "HH:mm:ss",
        "tickmarks": 4,
        "persist": false,
        "legend": "1",
        "combine": false,
        "blanklabel": "",
        "x": 510,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7484d19767e797a7",
        "type": "function",
        "z": "b4a9d9fc0fb382cd",
        "name": "time count",
        "func": "let temps = context.get(\"temps\");\nlet min = 1 // en dessous, pas compatbilisé\nlet max = 20000  // au dessus, pas comptabilisé\n\nif (msg.payload == 0)\n    context.set(\"temps\", Date.now());\n\nif (msg.payload == 1) {\n    msg.payload = (Date.now() - context.get(\"temps\")) / 1;\n    if (msg. payload > max || msg.payload < min)\n        return;\n    return msg;\n}\n\nreturn;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 320,
        "wires": [
            [
                "421be677a3af57e6",
                "1f814c7d23518d4b"
            ]
        ]
    },
    {
        "id": "54c63d215e8027a1",
        "type": "function",
        "z": "b4a9d9fc0fb382cd",
        "name": "time count",
        "func": "let temps = context.get(\"temps\");\nlet min = 0.1 // en dessous, pas compatbilisé\nlet max = 100000  // au dessus, pas comptabilisé\n\nif (msg.payload == 0)\n    context.set(\"temps\", Date.now());\n\nif (msg.payload == 1) {\n    msg.payload = (Date.now() - context.get(\"temps\")) / 60000;\n    if (msg.payload > max || msg.payload < min)\n        return;\n    return msg;\n}\n\nreturn;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 140,
        "wires": [
            [
                "e2a6156483d881e7"
            ]
        ]
    },
    {
        "id": "4fb73329359e7cd1",
        "type": "function",
        "z": "b4a9d9fc0fb382cd",
        "name": "inv signal",
        "func": "if (msg.payload == 1)\n    msg.payload = 0;\nelse\n    msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "5566289a03c56ba2"
            ]
        ]
    },
    {
        "id": "a4d6bd91eae6c20e",
        "type": "function",
        "z": "b4a9d9fc0fb382cd",
        "name": "time count",
        "func": "let temps = context.get(\"temps\");\nlet min = 0.1 // en dessous, pas compatbilisé\nlet max = 120  // au dessus, pas comptabilisé\n\nif (msg.payload == 0)\n    context.set(\"temps\", Date.now());\n\nif (msg.payload == 1) {\n    msg.payload = (Date.now() - context.get(\"temps\")) / 1000;\n    if (msg.payload > max || msg.payload < min)\n        return;\n    return msg;\n}\n\nreturn;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 620,
        "wires": [
            [
                "021d9a9ebcd0b5a8"
            ]
        ]
    },
    {
        "id": "b787c2e0575707df",
        "type": "ui_statetrail",
        "z": "b4a9d9fc0fb382cd",
        "group": "70601cfeaa15154b",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "CC alm",
        "label": "",
        "states": [
            {
                "state": 0,
                "col": "#e01b24",
                "t": "num",
                "label": ""
            },
            {
                "state": 1,
                "col": "#999999",
                "t": "num",
                "label": ""
            }
        ],
        "periodLimit": "5",
        "periodLimitUnit": "60",
        "timeformat": "HH:mm:ss",
        "tickmarks": 4,
        "persist": false,
        "legend": "1",
        "combine": false,
        "blanklabel": "",
        "x": 520,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "b3c1729260c6e2f7",
        "type": "ui_text",
        "z": "b4a9d9fc0fb382cd",
        "group": "70601cfeaa15154b",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "CCE tmp fonct",
        "label": "temps fonctionnement",
        "format": "{{msg.payload}} sec",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 540,
        "y": 500,
        "wires": []
    },
    {
        "id": "421be677a3af57e6",
        "type": "ui_text",
        "z": "b4a9d9fc0fb382cd",
        "group": "70601cfeaa15154b",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "CCA tmp fonct",
        "label": "temps fonctionnement",
        "format": "{{msg.payload}} sec",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 540,
        "y": 320,
        "wires": []
    },
    {
        "id": "e2a6156483d881e7",
        "type": "ui_text",
        "z": "b4a9d9fc0fb382cd",
        "group": "70601cfeaa15154b",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "CCT tmp fonct",
        "label": "temps fonctionnement",
        "format": "{{msg.payload}} min",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 540,
        "y": 140,
        "wires": []
    },
    {
        "id": "021d9a9ebcd0b5a8",
        "type": "ui_text",
        "z": "b4a9d9fc0fb382cd",
        "group": "70601cfeaa15154b",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "CC alm",
        "label": "temps fonctionnement",
        "format": "{{msg.payload}} sec",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 520,
        "y": 620,
        "wires": []
    },
    {
        "id": "e168ad5bf680efa8",
        "type": "ui_led",
        "z": "b4a9d9fc0fb382cd",
        "order": 1,
        "group": "70601cfeaa15154b",
        "width": 0,
        "height": 0,
        "label": "CCT Clapet ouvert",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "CCT led",
        "x": 360,
        "y": 100,
        "wires": []
    },
    {
        "id": "8829dff3a824ab27",
        "type": "ui_led",
        "z": "b4a9d9fc0fb382cd",
        "order": 7,
        "group": "70601cfeaa15154b",
        "width": 0,
        "height": 0,
        "label": "CCA Aliementation Pellets",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "CCA led",
        "x": 360,
        "y": 280,
        "wires": []
    },
    {
        "id": "b3304ab498e5675f",
        "type": "ui_led",
        "z": "b4a9d9fc0fb382cd",
        "order": 4,
        "group": "70601cfeaa15154b",
        "width": 0,
        "height": 0,
        "label": "CCE Extraction Pellets",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "CCE led",
        "x": 360,
        "y": 440,
        "wires": []
    },
    {
        "id": "e594747d0228389a",
        "type": "ui_led",
        "z": "b4a9d9fc0fb382cd",
        "order": 4,
        "group": "70601cfeaa15154b",
        "width": 0,
        "height": 0,
        "label": "CCx alm",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "CC alm",
        "x": 360,
        "y": 560,
        "wires": []
    },
    {
        "id": "d42f7d5dc0d3f9e4",
        "type": "arduino in",
        "z": "b4a9d9fc0fb382cd",
        "name": "4 alarme",
        "pin": "5",
        "state": "PULLUP",
        "arduino": "cfce575c6711bc96",
        "x": 100,
        "y": 520,
        "wires": [
            [
                "927eedc6f81757a2",
                "9bcb0a22e23097b4",
                "5b401f4ad2518bae"
            ]
        ]
    },
    {
        "id": "400df6855b277b01",
        "type": "arduino in",
        "z": "b4a9d9fc0fb382cd",
        "name": "5 CCY-O",
        "pin": "6",
        "state": "PULLUP",
        "arduino": "cfce575c6711bc96",
        "x": 100,
        "y": 820,
        "wires": [
            [
                "927eedc6f81757a2",
                "5b401f4ad2518bae",
                "4ee897f8cff0877c"
            ]
        ]
    },
    {
        "id": "98d931b87d9d0d09",
        "type": "arduino in",
        "z": "b4a9d9fc0fb382cd",
        "name": "6 CCY-F",
        "pin": "7",
        "state": "PULLUP",
        "arduino": "cfce575c6711bc96",
        "x": 100,
        "y": 880,
        "wires": [
            [
                "927eedc6f81757a2",
                "5b401f4ad2518bae",
                "2f0779db3cf530bf"
            ]
        ]
    },
    {
        "id": "b31dd3cdabd0e019",
        "type": "arduino in",
        "z": "b4a9d9fc0fb382cd",
        "name": "7 CLY-O",
        "pin": "8",
        "state": "PULLUP",
        "arduino": "cfce575c6711bc96",
        "x": 100,
        "y": 940,
        "wires": [
            [
                "927eedc6f81757a2",
                "5b401f4ad2518bae",
                "d4d5a7ab157f0c42"
            ]
        ]
    },
    {
        "id": "092dfab12746ebbc",
        "type": "arduino in",
        "z": "b4a9d9fc0fb382cd",
        "name": "8 CLY-F ",
        "pin": "9",
        "state": "PULLUP",
        "arduino": "cfce575c6711bc96",
        "x": 90,
        "y": 1000,
        "wires": [
            [
                "927eedc6f81757a2",
                "5b401f4ad2518bae",
                "77c875e316eb4751"
            ]
        ]
    },
    {
        "id": "477310160ab77025",
        "type": "arduino in",
        "z": "b4a9d9fc0fb382cd",
        "name": "3 extraction",
        "pin": "4",
        "state": "PULLUP",
        "arduino": "cfce575c6711bc96",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "45d0ac013dea62a4"
            ]
        ]
    },
    {
        "id": "86c11184b968db37",
        "type": "arduino in",
        "z": "b4a9d9fc0fb382cd",
        "name": "2 alim",
        "pin": "3",
        "state": "PULLUP",
        "arduino": "cfce575c6711bc96",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "34d18a186ce6a711"
            ]
        ]
    },
    {
        "id": "5566289a03c56ba2",
        "type": "arduino out",
        "z": "b4a9d9fc0fb382cd",
        "name": "",
        "pin": "13",
        "state": "OUTPUT",
        "arduino": "cfce575c6711bc96",
        "x": 800,
        "y": 280,
        "wires": []
    },
    {
        "id": "030ce82e5bb8f621",
        "type": "debounce",
        "z": "b4a9d9fc0fb382cd",
        "time": "25",
        "name": "25ms",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "e168ad5bf680efa8",
                "54c63d215e8027a1",
                "10a120c66868afc0",
                "927eedc6f81757a2",
                "e6dae370b83bf113",
                "5b401f4ad2518bae"
            ]
        ]
    },
    {
        "id": "45d0ac013dea62a4",
        "type": "debounce",
        "z": "b4a9d9fc0fb382cd",
        "time": "25",
        "name": "25ms",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "e51edd9918cb0505",
                "eac996f3dcb6a3e4",
                "927eedc6f81757a2",
                "b3304ab498e5675f",
                "8923b9c079a135e0",
                "5b401f4ad2518bae"
            ]
        ]
    },
    {
        "id": "34d18a186ce6a711",
        "type": "debounce",
        "z": "b4a9d9fc0fb382cd",
        "time": "25",
        "name": "25ms",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "8829dff3a824ab27",
                "7484d19767e797a7",
                "6db06f92cc370cf5",
                "4fb73329359e7cd1",
                "927eedc6f81757a2",
                "5b401f4ad2518bae",
                "5c50629c516aa946"
            ]
        ]
    },
    {
        "id": "9bcb0a22e23097b4",
        "type": "debounce",
        "z": "b4a9d9fc0fb382cd",
        "time": "25",
        "name": "25ms",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "a4d6bd91eae6c20e",
                "b787c2e0575707df",
                "e594747d0228389a",
                "390f1787d0046827"
            ]
        ]
    },
    {
        "id": "7a0231a99e992053",
        "type": "ha-binary-sensor",
        "z": "b4a9d9fc0fb382cd",
        "name": "CCT",
        "entityConfig": "83881b320c9c2553",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 450,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1f814c7d23518d4b",
        "type": "ha-sensor",
        "z": "b4a9d9fc0fb382cd",
        "name": "CCA",
        "entityConfig": "ba0a1398b9454b80",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 510,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "f1b9bd71ebebf3e8",
        "type": "ha-binary-sensor",
        "z": "b4a9d9fc0fb382cd",
        "name": "CC alm",
        "entityConfig": "7c830c57c4b63de6",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 520,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "98a19fb128e74d3d",
        "type": "ha-sensor",
        "z": "b4a9d9fc0fb382cd",
        "name": "CCE",
        "entityConfig": "b4a654fa94dfc54b",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 810,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "e6dae370b83bf113",
        "type": "function",
        "z": "b4a9d9fc0fb382cd",
        "name": "inverse",
        "func": "if (msg.payload == 1) msg.payload = false\nelse msg.payload = true\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 180,
        "wires": [
            [
                "7a0231a99e992053"
            ]
        ]
    },
    {
        "id": "390f1787d0046827",
        "type": "function",
        "z": "b4a9d9fc0fb382cd",
        "name": "inverse",
        "func": "if (msg.payload == 1) msg.payload = false\nelse msg.payload = true\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 660,
        "wires": [
            [
                "f1b9bd71ebebf3e8"
            ]
        ]
    },
    {
        "id": "8923b9c079a135e0",
        "type": "function",
        "z": "b4a9d9fc0fb382cd",
        "name": "inv",
        "func": "if (msg.payload == 1) msg.payload = false\nelse msg.payload = true\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 440,
        "wires": [
            [
                "98a19fb128e74d3d"
            ]
        ],
        "icon": "node-red/swap.svg"
    },
    {
        "id": "5b401f4ad2518bae",
        "type": "function",
        "z": "b4a9d9fc0fb382cd",
        "name": "function 6",
        "func": "test = {\n    \"1\": null,\n    \"2\": null,\n    \"3\": null,\n    \"4\": null,\n    \"5\": null,\n    \"6\": null,\n    \"7\": null,\n    \"8\": null\n}\n\ntest[msg.topic] = msg.payload;\n\nmsg.payload = test;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1060,
        "wires": [
            [
                "5cfb9a37ff23091d"
            ]
        ]
    },
    {
        "id": "a46b096f57df9eba",
        "type": "inject",
        "z": "b4a9d9fc0fb382cd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 720,
        "wires": [
            [
                "f1b9bd71ebebf3e8"
            ]
        ]
    },
    {
        "id": "69fafa6314cb1bf5",
        "type": "arduino in",
        "z": "b4a9d9fc0fb382cd",
        "name": "1 trappe",
        "pin": "2",
        "state": "PULLUP",
        "arduino": "cfce575c6711bc96",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "030ce82e5bb8f621"
            ]
        ],
        "info": "trappe"
    },
    {
        "id": "5c50629c516aa946",
        "type": "link out",
        "z": "b4a9d9fc0fb382cd",
        "name": "alim pellets",
        "mode": "link",
        "links": [
            "26155f29941442d4",
            "4f07dc0556d4ce20"
        ],
        "x": 305,
        "y": 360,
        "wires": []
    },
    {
        "id": "a9faa54761697270",
        "type": "inject",
        "z": "b4a9d9fc0fb382cd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "5c50629c516aa946"
            ]
        ]
    },
    {
        "id": "ee7b9c64ee9013b0",
        "type": "link out",
        "z": "b4a9d9fc0fb382cd",
        "name": "DI CCY",
        "mode": "link",
        "links": [
            "e0ee3684f06ec9bc"
        ],
        "x": 465,
        "y": 860,
        "wires": []
    },
    {
        "id": "4ee897f8cff0877c",
        "type": "change",
        "z": "b4a9d9fc0fb382cd",
        "name": "open",
        "rules": [
            {
                "t": "set",
                "p": "sens",
                "pt": "msg",
                "to": "ouv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 820,
        "wires": [
            [
                "ee7b9c64ee9013b0",
                "723972f7b591f33e"
            ]
        ]
    },
    {
        "id": "2f0779db3cf530bf",
        "type": "change",
        "z": "b4a9d9fc0fb382cd",
        "name": "close",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 880,
        "wires": [
            [
                "ee7b9c64ee9013b0"
            ]
        ]
    },
    {
        "id": "3de172f738637c42",
        "type": "link out",
        "z": "b4a9d9fc0fb382cd",
        "name": "DI CLY",
        "mode": "link",
        "links": [
            "7642def301e445a8"
        ],
        "x": 465,
        "y": 980,
        "wires": []
    },
    {
        "id": "d4d5a7ab157f0c42",
        "type": "change",
        "z": "b4a9d9fc0fb382cd",
        "name": "open",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "open",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 940,
        "wires": [
            [
                "3de172f738637c42"
            ]
        ]
    },
    {
        "id": "77c875e316eb4751",
        "type": "change",
        "z": "b4a9d9fc0fb382cd",
        "name": "close",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1000,
        "wires": [
            [
                "3de172f738637c42"
            ]
        ]
    },
    {
        "id": "14e8bcc9c3109256",
        "type": "inject",
        "z": "b4a9d9fc0fb382cd",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 1100,
        "wires": [
            [
                "2f0779db3cf530bf"
            ]
        ]
    },
    {
        "id": "3d41c4976ed49adb",
        "type": "inject",
        "z": "b4a9d9fc0fb382cd",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 90,
        "y": 1140,
        "wires": [
            [
                "2f0779db3cf530bf"
            ]
        ]
    },
    {
        "id": "723972f7b591f33e",
        "type": "debug",
        "z": "b4a9d9fc0fb382cd",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 800,
        "wires": []
    },
    {
        "id": "8cae6036f22da9f4",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CC1",
        "pin": "22",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 390,
        "y": 540,
        "wires": []
    },
    {
        "id": "039e35ec81fe2635",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "true",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "bc6326746b4fa637"
            ]
        ]
    },
    {
        "id": "5a724b50f6b74f44",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "false",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "bc6326746b4fa637"
            ]
        ]
    },
    {
        "id": "2e518e487f779969",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CC2",
        "pin": "27",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 390,
        "y": 620,
        "wires": []
    },
    {
        "id": "50d9ea5b77b57353",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "true",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 600,
        "wires": [
            [
                "2b4ff4fa59a44d35"
            ]
        ]
    },
    {
        "id": "718a4b97706910ed",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "false",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 640,
        "wires": [
            [
                "2b4ff4fa59a44d35"
            ]
        ]
    },
    {
        "id": "4ee0c134286ff892",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CC3",
        "pin": "17",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 390,
        "y": 700,
        "wires": []
    },
    {
        "id": "06198dbe1b75194b",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "true",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "e36dc28683e001da"
            ]
        ]
    },
    {
        "id": "302b0e82178b04cd",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "false",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "e36dc28683e001da"
            ]
        ]
    },
    {
        "id": "1f21768faf56e4b8",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "K12, CCY-O",
        "pin": "16",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 670,
        "y": 920,
        "wires": []
    },
    {
        "id": "ba9c6f977ec31327",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "open",
        "props": [
            {
                "p": "sens",
                "v": "ouv",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "68612b13d467074f",
                "da2299bc9bf7e886"
            ]
        ]
    },
    {
        "id": "0bd1ac7d72ebab82",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "close",
        "props": [
            {
                "p": "sens",
                "v": "fer",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 1000,
        "wires": [
            [
                "68612b13d467074f",
                "da2299bc9bf7e886"
            ]
        ]
    },
    {
        "id": "b6711e910879e3ce",
        "type": "comment",
        "z": "bad0d5e8ce8cf0c6",
        "name": "Relais chauffe accu",
        "info": "",
        "x": 130,
        "y": 480,
        "wires": []
    },
    {
        "id": "38c347c90e316966",
        "type": "comment",
        "z": "bad0d5e8ce8cf0c6",
        "name": "Relais tableau",
        "info": "",
        "x": 110,
        "y": 100,
        "wires": []
    },
    {
        "id": "97bf355dcd81b1cd",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "K1 CPL",
        "pin": "6",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 640,
        "y": 160,
        "wires": []
    },
    {
        "id": "f5cb7f8e04a0c78e",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "OFF",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "307c361b1568173d"
            ]
        ]
    },
    {
        "id": "1dbc69e2963fe98f",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "ON",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "307c361b1568173d"
            ]
        ]
    },
    {
        "id": "35e35f4199e5276a",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "K2",
        "pin": "13",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 630,
        "y": 240,
        "wires": []
    },
    {
        "id": "ee1f2db453471feb",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "true",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "346508db2fc96785"
            ]
        ]
    },
    {
        "id": "e3fb7ecd82dad213",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "false",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "346508db2fc96785"
            ]
        ]
    },
    {
        "id": "7a4cab5249f244a1",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "K3",
        "pin": "19",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 510,
        "y": 320,
        "wires": []
    },
    {
        "id": "c669d5c94a4599c5",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "true",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "7a4cab5249f244a1"
            ]
        ]
    },
    {
        "id": "cc6b9ee23b271c82",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "false",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "7a4cab5249f244a1"
            ]
        ]
    },
    {
        "id": "95a52f7f60ca90e5",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "K4",
        "pin": "26",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 510,
        "y": 400,
        "wires": []
    },
    {
        "id": "fbd89e136820b235",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "true",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "95a52f7f60ca90e5"
            ]
        ]
    },
    {
        "id": "2867cc9cc41e793b",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "false",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 420,
        "wires": [
            [
                "95a52f7f60ca90e5"
            ]
        ]
    },
    {
        "id": "bf3efc77de503cc6",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "K11, Pellets",
        "pin": "12",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 670,
        "y": 840,
        "wires": []
    },
    {
        "id": "8ea87c0a487dd251",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "true",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 820,
        "wires": [
            [
                "977444329661ef05"
            ]
        ]
    },
    {
        "id": "b4385b699bbd94d3",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "false",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 860,
        "wires": [
            [
                "977444329661ef05"
            ]
        ]
    },
    {
        "id": "307c361b1568173d",
        "type": "ui-switch",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CPL (pompe logement)",
        "label": "Pompe Logement (CPL)",
        "group": "6003beaf3e655f88",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": true,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-left-swapped",
        "clickableArea": "switch",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "0af208023f4261b1"
            ]
        ]
    },
    {
        "id": "346508db2fc96785",
        "type": "ui-switch",
        "z": "bad0d5e8ce8cf0c6",
        "name": "K2",
        "label": "K2",
        "group": "6003beaf3e655f88",
        "order": 2,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-left-swapped",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 270,
        "y": 240,
        "wires": [
            [
                "f7a54ac6d13f0484",
                "96cb8343b8fd0ce3"
            ]
        ]
    },
    {
        "id": "f7a54ac6d13f0484",
        "type": "function",
        "z": "bad0d5e8ce8cf0c6",
        "name": "inv",
        "func": "if (msg.payload == true) \n    msg.payload = false;\nelse \n    msg.payload = true\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 240,
        "wires": [
            [
                "35e35f4199e5276a"
            ]
        ],
        "icon": "node-red/swap.svg"
    },
    {
        "id": "0af208023f4261b1",
        "type": "function",
        "z": "bad0d5e8ce8cf0c6",
        "name": "inv",
        "func": "if (msg.payload == true) \n    msg.payload = false;\nelse \n    msg.payload = true\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            [
                "97bf355dcd81b1cd"
            ]
        ],
        "icon": "node-red/swap.svg"
    },
    {
        "id": "bc6326746b4fa637",
        "type": "ui-switch",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CC1",
        "label": "Corps de chauffe 1 (CC1)",
        "group": "51713a7681769857",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": true,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-left-swapped",
        "clickableArea": "switch",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 270,
        "y": 540,
        "wires": [
            [
                "8cae6036f22da9f4"
            ]
        ]
    },
    {
        "id": "2b4ff4fa59a44d35",
        "type": "ui-switch",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CC2",
        "label": "Corps de chauffe 2 (CC2)",
        "group": "51713a7681769857",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": true,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-left-swapped",
        "clickableArea": "switch",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 270,
        "y": 620,
        "wires": [
            [
                "2e518e487f779969"
            ]
        ]
    },
    {
        "id": "e36dc28683e001da",
        "type": "ui-switch",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CC3",
        "label": "Corps de chauffe 3 (CC3)",
        "group": "51713a7681769857",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": true,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-left-swapped",
        "clickableArea": "switch",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 270,
        "y": 700,
        "wires": [
            [
                "4ee0c134286ff892"
            ]
        ]
    },
    {
        "id": "96cb8343b8fd0ce3",
        "type": "ui-state-timeline",
        "z": "bad0d5e8ce8cf0c6",
        "group": "45f5ebcd30441960",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "state timeline",
        "barHeight": 30,
        "states": [
            {
                "label": "On",
                "value": "true",
                "valueType": "bool",
                "color": "#009933"
            },
            {
                "label": "Off",
                "value": "false",
                "valueType": "bool",
                "color": "#999999"
            }
        ],
        "timelineTimeFormat": "h:mm A",
        "detailsTimeFormat": "DD/M/YY hh:mm",
        "minTimeLabelGap": 6,
        "liveUpdate": true,
        "rangeLimit": 24,
        "rangeLimitUnit": "3600",
        "showTimeMarkers": true,
        "showOnlyStartEndTimes": true,
        "x": 470,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "cb703e011f42abd0",
        "type": "comment",
        "z": "bad0d5e8ce8cf0c6",
        "name": "Relais statiques",
        "info": "",
        "x": 120,
        "y": 780,
        "wires": []
    },
    {
        "id": "51feb1a558766d31",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "K13, CCY-F",
        "pin": "20",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 670,
        "y": 980,
        "wires": []
    },
    {
        "id": "36fe08c6c7f829af",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "stop",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 960,
        "wires": [
            [
                "68612b13d467074f",
                "da2299bc9bf7e886"
            ]
        ]
    },
    {
        "id": "8ccf4f1f59b8d819",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "K14, CLY-O",
        "pin": "21",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 670,
        "y": 1060,
        "wires": []
    },
    {
        "id": "cc32024f8b815db4",
        "type": "function",
        "z": "bad0d5e8ce8cf0c6",
        "name": "multiplication",
        "func": "let facteur = 3; // multiple du temps à ajouter\n\n// Récupérer le timer précédemment enregistré (pour éviter les doublons)\nlet timer = context.get('timer');\nlet start = context.get('start');\n\n// Quand msg.payload est true\nif (msg.payload === true) {\n    // Effacer tout timer en cours\n    if (timer) {\n        clearTimeout(timer);\n        context.set('timer', null);\n    }\n    // Enregistrer le temps de départ\n    start = Date.now();\n    context.set('start', start);\n\n    // Générer le message de sortie (true immédiatement)\n    msg.payload = true;\n    return msg;\n}\n\n// Quand msg.payload est false ET un start existe\nif (msg.payload === false && start) {\n    // Durée entre true et false (en millisecondes)\n    let duree = Date.now() - start;\n    // Calculer le délai désiré (4x cette durée)\n    let delai = duree * facteur;\n\n    // On prépare la fonction à exécuter plus tard\n    timer = setTimeout(() => {\n        // Envoi du faux (ASTUCE : utilise 'node.send' car on est dans setTimeout)\n        node.send({ payload: false});\n    }, delai);\n\n    // Sauvegarde du timer dans le contexte\n    context.set('timer', timer);\n\n    // On ne retourne rien ici car rien à émettre tout de suite\n    return [null, {payload: duree}];\n}\n\n// Pour tous les autres cas : rien à faire\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 600,
        "wires": [
            [
                "8debeba660266115"
            ],
            [
                "42ac3acd00200574"
            ]
        ]
    },
    {
        "id": "8debeba660266115",
        "type": "debug",
        "z": "bad0d5e8ce8cf0c6",
        "name": "debug sig",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 580,
        "wires": []
    },
    {
        "id": "42ac3acd00200574",
        "type": "debug",
        "z": "bad0d5e8ce8cf0c6",
        "name": "debug t",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 620,
        "wires": []
    },
    {
        "id": "26155f29941442d4",
        "type": "link in",
        "z": "bad0d5e8ce8cf0c6",
        "name": "signal alim pellet",
        "links": [
            "5c50629c516aa946"
        ],
        "x": 945,
        "y": 540,
        "wires": [
            [
                "cc32024f8b815db4"
            ]
        ]
    },
    {
        "id": "1750c3c23169a1d8",
        "type": "toggleUltimate",
        "z": "bad0d5e8ce8cf0c6",
        "name": "Toggle",
        "valueToToggle": "false",
        "payloadPropName": "payload",
        "translatorConfig": "",
        "x": 990,
        "y": 600,
        "wires": [
            [
                "cc32024f8b815db4"
            ]
        ]
    },
    {
        "id": "be750585c4a3692d",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 850,
        "y": 600,
        "wires": [
            [
                "1750c3c23169a1d8"
            ]
        ]
    },
    {
        "id": "caddc8e3edb73c58",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 990,
        "y": 660,
        "wires": [
            [
                "cc32024f8b815db4"
            ]
        ]
    },
    {
        "id": "132c3d91b7d41172",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 990,
        "y": 700,
        "wires": [
            [
                "cc32024f8b815db4"
            ]
        ]
    },
    {
        "id": "de698e222495fe55",
        "type": "toggleUltimate",
        "z": "bad0d5e8ce8cf0c6",
        "name": "Toggle",
        "valueToToggle": "false",
        "payloadPropName": "payload",
        "translatorConfig": "",
        "x": 1230,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "02ae67ce40cf9c2e",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1090,
        "y": 820,
        "wires": [
            [
                "de698e222495fe55"
            ]
        ]
    },
    {
        "id": "ff15001c47b3b36b",
        "type": "rpi-gpio out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "K15, CLY-F",
        "pin": "7",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 670,
        "y": 1120,
        "wires": []
    },
    {
        "id": "68612b13d467074f",
        "type": "function",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CCY",
        "func": "// Initialisation des états de sorties (par défaut false)\nlet open = false;\nlet close = false;\n\nif (msg.sens === \"ouv\") {\n    // Si on ouvre, on ferme obligatoirement l'autre\n    open = msg.payload === true;\n    close = false;\n} else if (msg.topsensic === \"fer\") {\n    // Si on ferme, on ouvre obligatoirement l'autre\n    close = msg.payload === true;\n    open = false;\n} else {\n    // Optionnel : gérer les topics inconnus\n    if (msg.payload === false) {\n        open = false;\n        close = false;\n    }\n}\n\n// Préparation des messages pour chaque sortie\nreturn [\n    { payload: open },   // 1ère sortie : Ouvrir\n    { payload: close }   // 2ème sortie : Fermer\n];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 920,
        "wires": [
            [
                "1f21768faf56e4b8"
            ],
            [
                "51feb1a558766d31"
            ]
        ]
    },
    {
        "id": "ead4e2a5e1369081",
        "type": "function",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CLY",
        "func": "// Initialisation des états de sorties (par défaut false)\nlet open = false;\nlet close = false;\n\nif (msg.sens === \"ouv\") {\n    // Si on ouvre, on ferme obligatoirement l'autre\n    open = msg.payload === true;\n    close = false;\n} else if (msg.topsensic === \"fer\") {\n    // Si on ferme, on ouvre obligatoirement l'autre\n    close = msg.payload === true;\n    open = false;\n} else {\n    // Optionnel : gérer les topics inconnus\n    if (msg.payload === false) {\n        open = false;\n        close = false;\n    }\n}\n\n// Préparation des messages pour chaque sortie\nreturn [\n    { payload: open },   // 1ère sortie : Ouvrir\n    { payload: close }   // 2ème sortie : Fermer\n];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "8ccf4f1f59b8d819"
            ],
            [
                "ff15001c47b3b36b"
            ]
        ]
    },
    {
        "id": "da2299bc9bf7e886",
        "type": "link out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CCY (DO-Vannes)",
        "mode": "link",
        "links": [
            "585b3fd626f7518c"
        ],
        "x": 395,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e0ee3684f06ec9bc",
        "type": "link in",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CCY (DI-DO)",
        "links": [
            "ee7b9c64ee9013b0"
        ],
        "x": 335,
        "y": 960,
        "wires": [
            [
                "68612b13d467074f",
                "da2299bc9bf7e886"
            ]
        ]
    },
    {
        "id": "7642def301e445a8",
        "type": "link in",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CLY (DI-DO)",
        "links": [
            "3de172f738637c42"
        ],
        "x": 335,
        "y": 1100,
        "wires": [
            [
                "ead4e2a5e1369081",
                "19ea1bd7533f7474"
            ]
        ]
    },
    {
        "id": "2562b5c480774b4e",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "open",
        "props": [
            {
                "p": "sens",
                "v": "ouv",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 1060,
        "wires": [
            [
                "ead4e2a5e1369081",
                "19ea1bd7533f7474"
            ]
        ]
    },
    {
        "id": "7fcbda8f3a84145e",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "close",
        "props": [
            {
                "p": "sens",
                "v": "fer",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 1140,
        "wires": [
            [
                "ead4e2a5e1369081",
                "19ea1bd7533f7474"
            ]
        ]
    },
    {
        "id": "a5b0a9c0ec84a346",
        "type": "inject",
        "z": "bad0d5e8ce8cf0c6",
        "name": "stop",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 130,
        "y": 1100,
        "wires": [
            [
                "ead4e2a5e1369081",
                "19ea1bd7533f7474"
            ]
        ]
    },
    {
        "id": "19ea1bd7533f7474",
        "type": "link out",
        "z": "bad0d5e8ce8cf0c6",
        "name": "CLY (DO-Vannes)",
        "mode": "link",
        "links": [
            "7c5d67fed9a4b7cb"
        ],
        "x": 395,
        "y": 1140,
        "wires": []
    },
    {
        "id": "977444329661ef05",
        "type": "function",
        "z": "bad0d5e8ce8cf0c6",
        "name": "multiplication",
        "func": "let facteur = 3; // multiple du temps à ajouter\n\n// Récupérer le timer précédemment enregistré (pour éviter les doublons)\nlet timer = context.get('timer');\nlet start = context.get('start');\n\n// Quand msg.payload est true\nif (msg.payload === true) {\n    // Effacer tout timer en cours\n    if (timer) {\n        clearTimeout(timer);\n        context.set('timer', null);\n    }\n    // Enregistrer le temps de départ\n    start = Date.now();\n    context.set('start', start);\n\n    // Générer le message de sortie (true immédiatement)\n    msg.payload = true;\n    return msg;\n}\n\n// Quand msg.payload est false ET un start existe\nif (msg.payload === false && start) {\n    // Durée entre true et false (en millisecondes)\n    let duree = Date.now() - start;\n    // Calculer le délai désiré (4x cette durée)\n    let delai = duree * facteur;\n\n    // On prépare la fonction à exécuter plus tard\n    timer = setTimeout(() => {\n        // Envoi du faux (ASTUCE : utilise 'node.send' car on est dans setTimeout)\n        node.send({ payload: false});\n    }, delai);\n\n    // Sauvegarde du timer dans le contexte\n    context.set('timer', timer);\n\n    // On ne retourne rien ici car rien à émettre tout de suite\n    return [null, {payload: duree}];\n}\n\n// Pour tous les autres cas : rien à faire\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 840,
        "wires": [
            [
                "bf3efc77de503cc6"
            ],
            []
        ]
    },
    {
        "id": "4f07dc0556d4ce20",
        "type": "link in",
        "z": "bad0d5e8ce8cf0c6",
        "name": "alim pellets",
        "links": [
            "5c50629c516aa946"
        ],
        "x": 315,
        "y": 880,
        "wires": [
            [
                "977444329661ef05"
            ]
        ]
    },
    {
        "id": "8c28de7d440cd7b8",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"plage1\":100,\"plage2\":200}",
        "payloadType": "json",
        "x": 290,
        "y": 1280,
        "wires": [
            [
                "13b0c012446433c8"
            ]
        ]
    },
    {
        "id": "13b0c012446433c8",
        "type": "change",
        "z": "e93be114ec7eee96",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parameters",
                "pt": "global",
                "to": "payload",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "dc70c744897216b6",
        "type": "debug",
        "z": "e93be114ec7eee96",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1340,
        "wires": []
    },
    {
        "id": "5c40f5f4d3116cb0",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 1340,
        "wires": [
            [
                "8847c03ece7d5d12"
            ]
        ]
    },
    {
        "id": "8847c03ece7d5d12",
        "type": "function",
        "z": "e93be114ec7eee96",
        "name": "function 2",
        "func": "msg = global.get(\"parameters\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1340,
        "wires": [
            [
                "dc70c744897216b6"
            ]
        ]
    },
    {
        "id": "1d491896036374a3",
        "type": "debug",
        "z": "e93be114ec7eee96",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1220,
        "wires": []
    },
    {
        "id": "59a93f340bbba712",
        "type": "debug",
        "z": "e93be114ec7eee96",
        "name": "debug 1-W",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 720,
        "wires": []
    },
    {
        "id": "58ee910e78a97890",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "a603a7ff2fe5505b"
            ]
        ]
    },
    {
        "id": "56ca772ce772cf20",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "258fa51f99446a6c"
            ]
        ]
    },
    {
        "id": "9c98511c0f51a4c2",
        "type": "mqtt in",
        "z": "e93be114ec7eee96",
        "name": "",
        "topic": "MCE/HE1t",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "ee5cd5699662a4d3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 820,
        "wires": [
            [
                "8201c4117853fcbe",
                "8b8b9f06bfe08cb5",
                "0b9e646d60113a3b",
                "183ddefd7c791063",
                "2197a8fbe488c928"
            ]
        ]
    },
    {
        "id": "8201c4117853fcbe",
        "type": "change",
        "z": "e93be114ec7eee96",
        "name": "save tex",
        "rules": [
            {
                "t": "set",
                "p": "tex",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "a128873f25f32d57",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "14d2568bd1c25e8e"
            ]
        ]
    },
    {
        "id": "3eecbebe4e362966",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 320,
        "wires": [
            [
                "0a9dbd5f575091e0"
            ]
        ]
    },
    {
        "id": "195ef860b38468e3",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "eb0fe4cc18e30c64"
            ]
        ]
    },
    {
        "id": "f69ab166ca9dbf41",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 440,
        "wires": [
            [
                "371b258b8255702b"
            ]
        ]
    },
    {
        "id": "6361faa2618d21b0",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "e9bdc7b1d7b4b57f"
            ]
        ]
    },
    {
        "id": "71af7de7b8b88dfa",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "1ee34f4bdc047522"
            ]
        ]
    },
    {
        "id": "5ce57aace44d3aaf",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "314704192b0e329f"
            ]
        ]
    },
    {
        "id": "949392d21a99a5f1",
        "type": "rbe",
        "z": "e93be114ec7eee96",
        "name": "",
        "func": "deadband",
        "gap": "0.2",
        "start": "",
        "inout": "in",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 590,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "22d09b39b7af2014",
        "type": "ui_slider",
        "z": "e93be114ec7eee96",
        "name": "",
        "label": "slider",
        "tooltip": "",
        "group": "5c20945fc7a6e944",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "parameters.plage1",
        "topicType": "global",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 330,
        "y": 1220,
        "wires": [
            [
                "1d491896036374a3"
            ]
        ]
    },
    {
        "id": "6b49864fafa74277",
        "type": "ui_chart",
        "z": "e93be114ec7eee96",
        "name": "",
        "group": "1ac41474508e512e",
        "order": 10,
        "width": "6",
        "height": "6",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "80",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00f900",
            "#00fcff",
            "#ff2600",
            "#ff9200",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 430,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "8b8b9f06bfe08cb5",
        "type": "ui_chart",
        "z": "e93be114ec7eee96",
        "name": "graph temp",
        "group": "1ac41474508e512e",
        "order": 5,
        "width": "6",
        "height": "6",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-20",
        "ymax": "40",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 450,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "cd89f1a9eb9d9953",
        "type": "ui_chart",
        "z": "e93be114ec7eee96",
        "name": "accu",
        "group": "3e7a3cf8909ee831",
        "order": 5,
        "width": "6",
        "height": "6",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "80",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00f900",
            "#00fcff",
            "#ff2600",
            "#ff9200",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 430,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "96e885e3a88e165b",
        "type": "ui_ui_control",
        "z": "e93be114ec7eee96",
        "name": "",
        "events": "all",
        "x": 100,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "aa1b49a33da87379",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "1ac41474508e512e",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "TLD",
        "label": "TLD Départ vers Logement",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "40",
        "segWarn": "",
        "segHigh": "",
        "unit": "°C",
        "layout": "sh",
        "channelA": "TLO",
        "channelB": "TLI",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 430,
        "y": 140,
        "wires": []
    },
    {
        "id": "f652fb614dabb7a8",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "1ac41474508e512e",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "TCD",
        "label": "TCD Départ Chaudière",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "80",
        "segWarn": "",
        "segHigh": "",
        "unit": "°C",
        "layout": "sh",
        "channelA": "TLO",
        "channelB": "TLI",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 430,
        "y": 260,
        "wires": []
    },
    {
        "id": "91cf0d8e7bd4fa6c",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "1ac41474508e512e",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "TCR",
        "label": "TCR Retour vers Chaudière",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "80",
        "segWarn": "",
        "segHigh": "",
        "unit": "°C",
        "layout": "sh",
        "channelA": "TLO",
        "channelB": "TLI",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 430,
        "y": 320,
        "wires": []
    },
    {
        "id": "f6504622e611083b",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "1ac41474508e512e",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "TLR",
        "label": "TLR Retour de Logement",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": "40",
        "segWarn": "",
        "segHigh": "",
        "unit": "°C",
        "layout": "sh",
        "channelA": "TLO",
        "channelB": "TLI",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 430,
        "y": 200,
        "wires": []
    },
    {
        "id": "0b9e646d60113a3b",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "1ac41474508e512e",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Temp ext",
        "label": "Température extérieure",
        "colorHi": "#fefb00",
        "colorWarn": "#00f900",
        "colorNormal": "#0432ff",
        "colorOff": "#595959",
        "min": "-20",
        "max": "40",
        "segWarn": "20",
        "segHigh": "30",
        "unit": "°C",
        "layout": "sh",
        "channelA": "TLO",
        "channelB": "TLI",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 600,
        "y": 820,
        "wires": []
    },
    {
        "id": "24ca51444c1a801a",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "1ac41474508e512e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Temp int",
        "label": "Température intérieure",
        "colorHi": "#fefb00",
        "colorWarn": "#00f900",
        "colorNormal": "#0432ff",
        "colorOff": "#595959",
        "min": "10",
        "max": "30",
        "segWarn": "20",
        "segHigh": "25",
        "unit": "°C",
        "layout": "sh",
        "channelA": "TLO",
        "channelB": "TLI",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 600,
        "y": 880,
        "wires": []
    },
    {
        "id": "6e56a29dce00f101",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "3e7a3cf8909ee831",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "TAD",
        "label": "TAD Départ Accu",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 430,
        "y": 380,
        "wires": []
    },
    {
        "id": "17038fabb815aa8b",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "3e7a3cf8909ee831",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "TAR",
        "label": "TAR Retour vers Accu",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 430,
        "y": 440,
        "wires": []
    },
    {
        "id": "52491bcae857eac2",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "3e7a3cf8909ee831",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "TA1",
        "label": "TA1",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 430,
        "y": 500,
        "wires": []
    },
    {
        "id": "ec8be8564c097556",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "3e7a3cf8909ee831",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "TA2",
        "label": "TA2",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 430,
        "y": 560,
        "wires": []
    },
    {
        "id": "e60ea3888a57be8b",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "3e7a3cf8909ee831",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "TEE",
        "label": "TEE",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 430,
        "y": 660,
        "wires": []
    },
    {
        "id": "a603a7ff2fe5505b",
        "type": "sensor-ds18b20",
        "z": "e93be114ec7eee96",
        "name": "TLD",
        "topic": "",
        "sensorid": "28-80000000d476",
        "timer": "60",
        "repeat": true,
        "x": 270,
        "y": 140,
        "wires": [
            [
                "59a93f340bbba712",
                "aa1b49a33da87379",
                "6b49864fafa74277",
                "a091f4683b5c3e90",
                "8757ea0219934ca0",
                "1d2fcb3aa9803527"
            ]
        ]
    },
    {
        "id": "14d2568bd1c25e8e",
        "type": "sensor-ds18b20",
        "z": "e93be114ec7eee96",
        "name": "TCD",
        "topic": "",
        "sensorid": "28-0516a75848ff",
        "timer": "60",
        "repeat": true,
        "x": 270,
        "y": 260,
        "wires": [
            [
                "f652fb614dabb7a8",
                "6b49864fafa74277",
                "a091f4683b5c3e90",
                "16722ba2a4781bdd",
                "1be052351ee6fa2f"
            ]
        ]
    },
    {
        "id": "0a9dbd5f575091e0",
        "type": "sensor-ds18b20",
        "z": "e93be114ec7eee96",
        "name": "TCR",
        "topic": "",
        "sensorid": "28-0317000db6ff",
        "timer": "60",
        "repeat": true,
        "x": 270,
        "y": 320,
        "wires": [
            [
                "91cf0d8e7bd4fa6c",
                "6b49864fafa74277",
                "a091f4683b5c3e90",
                "3d0bd7b8646342b1",
                "75dac0e35bc3daba"
            ]
        ]
    },
    {
        "id": "eb0fe4cc18e30c64",
        "type": "sensor-ds18b20",
        "z": "e93be114ec7eee96",
        "name": "TAD",
        "topic": "",
        "sensorid": "28-0317004d7eff",
        "timer": "60",
        "repeat": true,
        "x": 270,
        "y": 380,
        "wires": [
            [
                "6e56a29dce00f101",
                "59a93f340bbba712",
                "cd89f1a9eb9d9953",
                "730cf87710f39e07",
                "326625b2ba884847",
                "813b082ae1f26a25"
            ]
        ]
    },
    {
        "id": "371b258b8255702b",
        "type": "sensor-ds18b20",
        "z": "e93be114ec7eee96",
        "name": "TAR",
        "topic": "",
        "sensorid": "28-0517004d88ff",
        "timer": "60",
        "repeat": true,
        "x": 270,
        "y": 440,
        "wires": [
            [
                "17038fabb815aa8b",
                "59a93f340bbba712",
                "cd89f1a9eb9d9953",
                "11b404a1964950b3",
                "08ebb80ccbf3d011",
                "813b082ae1f26a25"
            ]
        ]
    },
    {
        "id": "e9bdc7b1d7b4b57f",
        "type": "sensor-ds18b20",
        "z": "e93be114ec7eee96",
        "name": "TA1",
        "topic": "",
        "sensorid": "28-051700124aff",
        "timer": "60",
        "repeat": true,
        "x": 270,
        "y": 500,
        "wires": [
            [
                "52491bcae857eac2",
                "59a93f340bbba712",
                "cd89f1a9eb9d9953",
                "7e5b1fe8b239865b",
                "2d89271b20cbe9e8",
                "813b082ae1f26a25"
            ]
        ]
    },
    {
        "id": "1ee34f4bdc047522",
        "type": "sensor-ds18b20",
        "z": "e93be114ec7eee96",
        "name": "TA2",
        "topic": "",
        "sensorid": "28-05170031dbff",
        "timer": "60",
        "repeat": true,
        "x": 270,
        "y": 560,
        "wires": [
            [
                "ec8be8564c097556",
                "59a93f340bbba712",
                "cd89f1a9eb9d9953",
                "9bb086acdb48fca2",
                "79ea8cb40121c6d6",
                "813b082ae1f26a25"
            ]
        ]
    },
    {
        "id": "314704192b0e329f",
        "type": "sensor-ds18b20",
        "z": "e93be114ec7eee96",
        "name": "TEE",
        "topic": "",
        "sensorid": "28-0516a7af67ff",
        "timer": "60",
        "repeat": true,
        "x": 270,
        "y": 660,
        "wires": [
            [
                "e60ea3888a57be8b",
                "59a93f340bbba712",
                "949392d21a99a5f1"
            ]
        ]
    },
    {
        "id": "258fa51f99446a6c",
        "type": "sensor-ds18b20",
        "z": "e93be114ec7eee96",
        "name": "TLR",
        "topic": "",
        "sensorid": "28-0517003e93ff",
        "timer": "60",
        "repeat": true,
        "x": 270,
        "y": 200,
        "wires": [
            [
                "f6504622e611083b",
                "6b49864fafa74277",
                "a091f4683b5c3e90",
                "e41e487407c41b60",
                "d2318810c0df82fe"
            ]
        ]
    },
    {
        "id": "a5a23a756f98e0f0",
        "type": "ha-sensor",
        "z": "e93be114ec7eee96",
        "name": "TLD",
        "entityConfig": "96a45e815f473778",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 870,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "0f506fe1f2531350",
        "type": "ha-sensor",
        "z": "e93be114ec7eee96",
        "name": "TLR",
        "entityConfig": "9795ad6a276e4b41",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 870,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "412d9186697f793e",
        "type": "ha-sensor",
        "z": "e93be114ec7eee96",
        "name": "TCD",
        "entityConfig": "0abbcff6aba02d30",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 870,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6555b47acd74e7b5",
        "type": "ha-sensor",
        "z": "e93be114ec7eee96",
        "name": "TCR",
        "entityConfig": "b2843d8bd06d6838",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 870,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "a4d9a00c8834406b",
        "type": "ha-sensor",
        "z": "e93be114ec7eee96",
        "name": "TAD",
        "entityConfig": "523f866a941ced7a",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 870,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b26fda3e115daaf6",
        "type": "ha-sensor",
        "z": "e93be114ec7eee96",
        "name": "TAR",
        "entityConfig": "a62c4e513914fc49",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 870,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a7f0b867c4cbbb51",
        "type": "ha-sensor",
        "z": "e93be114ec7eee96",
        "name": "TA1",
        "entityConfig": "880f1fb308a18dfe",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 870,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "e0a2a2006b905340",
        "type": "ha-sensor",
        "z": "e93be114ec7eee96",
        "name": "TA2",
        "entityConfig": "ef77d95385e8392d",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 870,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "2a55175b402e3125",
        "type": "server-state-changed",
        "z": "e93be114ec7eee96",
        "name": "HA/MCT/HL1t",
        "server": "a5986c3613f86bbc",
        "version": 6,
        "outputs": 1,
        "exposeAsEntityConfig": "",
        "entities": {
            "entity": [
                "sensor.mct_hl1t"
            ],
            "substring": [],
            "regex": []
        },
        "outputInitially": false,
        "stateType": "str",
        "ifState": "",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputOnlyOnStateChange": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "T. Intérieure",
                "valueType": "str"
            }
        ],
        "x": 130,
        "y": 880,
        "wires": [
            [
                "8b8b9f06bfe08cb5",
                "24ca51444c1a801a",
                "4c2a5c1c0b710617",
                "7b8e308668652734"
            ]
        ]
    },
    {
        "id": "7e06a53558a85bca",
        "type": "server-state-changed",
        "z": "e93be114ec7eee96",
        "name": "HA/MCT/TLS",
        "server": "a5986c3613f86bbc",
        "version": 6,
        "outputs": 1,
        "exposeAsEntityConfig": "",
        "entities": {
            "entity": [
                "sensor.mct_tls"
            ],
            "substring": [],
            "regex": []
        },
        "outputInitially": false,
        "stateType": "str",
        "ifState": "",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputOnlyOnStateChange": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "T. Intérieure",
                "valueType": "str"
            }
        ],
        "x": 130,
        "y": 940,
        "wires": [
            [
                "53ea2f90b6fe601e",
                "84ae481e1c45eade",
                "7b8e308668652734"
            ]
        ]
    },
    {
        "id": "53ea2f90b6fe601e",
        "type": "ui_level",
        "z": "e93be114ec7eee96",
        "group": "1ac41474508e512e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Temp sol",
        "label": "Température sol",
        "colorHi": "#fefb00",
        "colorWarn": "#00f900",
        "colorNormal": "#0432ff",
        "colorOff": "#595959",
        "min": "10",
        "max": "30",
        "segWarn": "20",
        "segHigh": "25",
        "unit": "°C",
        "layout": "sh",
        "channelA": "TLO",
        "channelB": "TLI",
        "decimals": "1",
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 600,
        "y": 940,
        "wires": []
    },
    {
        "id": "ee2dad5c5e664093",
        "type": "comment",
        "z": "e93be114ec7eee96",
        "name": "",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "348ed6a7c9e08575",
        "type": "sensor-ds18b20",
        "z": "e93be114ec7eee96",
        "name": "",
        "topic": "",
        "sensorid": "28-0517004d88ff",
        "timer": "1",
        "repeat": false,
        "x": 790,
        "y": 680,
        "wires": [
            [
                "ce9be180700bd1ef"
            ]
        ]
    },
    {
        "id": "ce9be180700bd1ef",
        "type": "debug",
        "z": "e93be114ec7eee96",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 680,
        "wires": []
    },
    {
        "id": "685f64d4b25597c8",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 700,
        "y": 720,
        "wires": [
            [
                "348ed6a7c9e08575"
            ]
        ]
    },
    {
        "id": "183ddefd7c791063",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "T. Ext",
        "group": "c842328fcbb96582",
        "order": 1,
        "width": "3",
        "height": "1",
        "min": "-20",
        "max": "40",
        "ticks": [
            {
                "value": "0",
                "label": ""
            },
            {
                "value": "20",
                "label": ""
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            },
            {
                "size": 66,
                "color": "rgb(4, 50, 255)"
            },
            {
                "size": 33,
                "color": "rgb(4, 50, 255)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "default",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Extérieure",
        "icon": "forest",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 750,
        "y": 820,
        "wires": []
    },
    {
        "id": "4c2a5c1c0b710617",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "T. Int",
        "group": "c842328fcbb96582",
        "order": 2,
        "width": "3",
        "height": "1",
        "min": "0",
        "max": "40",
        "ticks": [
            {
                "value": "20",
                "label": ""
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            },
            {
                "size": 50,
                "color": "rgb(4, 50, 255)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "default",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Intérieure",
        "icon": "thermometer",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 750,
        "y": 880,
        "wires": []
    },
    {
        "id": "84ae481e1c45eade",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "T. Sol",
        "group": "c842328fcbb96582",
        "order": 4,
        "width": 0,
        "height": 0,
        "min": "0",
        "max": "40",
        "ticks": [
            {
                "value": "20",
                "label": ""
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            },
            {
                "size": 50,
                "color": "rgb(4, 50, 255)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "default",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Sol",
        "icon": "wall-sconce-flat-variant",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 750,
        "y": 940,
        "wires": []
    },
    {
        "id": "a091f4683b5c3e90",
        "type": "ui-chart",
        "z": "e93be114ec7eee96",
        "group": "6003beaf3e655f88",
        "name": "Chauffage",
        "label": "",
        "order": 7,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "HH:mm",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Température [°C]",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "10",
        "ymax": "80",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "false",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "removeOlderPoints": "",
        "colors": [
            "#ff0000",
            "#ffa200",
            "#00aaff",
            "#44ff00",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 630,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7b8e308668652734",
        "type": "ui-chart",
        "z": "e93be114ec7eee96",
        "group": "c842328fcbb96582",
        "name": "T. environnement",
        "label": "chart",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "HH:mm",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Température [°C]",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "-10",
        "ymax": "30",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "false",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "removeOlderPoints": "",
        "colors": [
            "#0075ff",
            "#2ca02c",
            "#2ca02c",
            "#217821",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 430,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "2197a8fbe488c928",
        "type": "change",
        "z": "e93be114ec7eee96",
        "name": "topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "T. Extérieure",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 840,
        "wires": [
            [
                "7b8e308668652734"
            ]
        ]
    },
    {
        "id": "8757ea0219934ca0",
        "type": "function",
        "z": "e93be114ec7eee96",
        "name": "1 sur 5",
        "func": "let cpt = context.get(\"cpt\")||0;\nif(cpt <= 0) {\n    cpt = 4;\n    context.set(\"cpt\", cpt);\n    return msg;\n}\nelse {\n    cpt = cpt - 1;\n    context.set(\"cpt\", cpt);\n    return\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 140,
        "wires": [
            [
                "a5a23a756f98e0f0"
            ]
        ],
        "icon": "font-awesome/fa-filter"
    },
    {
        "id": "e41e487407c41b60",
        "type": "function",
        "z": "e93be114ec7eee96",
        "name": "1 sur 5",
        "func": "let cpt = context.get(\"cpt\")||0;\nif(cpt <= 0) {\n    cpt = 4;\n    context.set(\"cpt\", cpt);\n    return msg;\n}\nelse {\n    cpt = cpt - 1;\n    context.set(\"cpt\", cpt);\n    return\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 200,
        "wires": [
            [
                "0f506fe1f2531350"
            ]
        ],
        "icon": "font-awesome/fa-filter"
    },
    {
        "id": "16722ba2a4781bdd",
        "type": "function",
        "z": "e93be114ec7eee96",
        "name": "1 sur 5",
        "func": "let cpt = context.get(\"cpt\")||0;\nif(cpt <= 0) {\n    cpt = 4;\n    context.set(\"cpt\", cpt);\n    return msg;\n}\nelse {\n    cpt = cpt - 1;\n    context.set(\"cpt\", cpt);\n    return\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 260,
        "wires": [
            [
                "412d9186697f793e"
            ]
        ],
        "icon": "font-awesome/fa-filter"
    },
    {
        "id": "3d0bd7b8646342b1",
        "type": "function",
        "z": "e93be114ec7eee96",
        "name": "1 sur 5",
        "func": "let cpt = context.get(\"cpt\")||0;\nif(cpt <= 0) {\n    cpt = 4;\n    context.set(\"cpt\", cpt);\n    return msg;\n}\nelse {\n    cpt = cpt - 1;\n    context.set(\"cpt\", cpt);\n    return\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 320,
        "wires": [
            [
                "6555b47acd74e7b5"
            ]
        ],
        "icon": "font-awesome/fa-filter"
    },
    {
        "id": "730cf87710f39e07",
        "type": "function",
        "z": "e93be114ec7eee96",
        "name": "1 sur 5",
        "func": "let cpt = context.get(\"cpt\")||0;\nif(cpt <= 0) {\n    cpt = 4;\n    context.set(\"cpt\", cpt);\n    return msg;\n}\nelse {\n    cpt = cpt - 1;\n    context.set(\"cpt\", cpt);\n    return\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 380,
        "wires": [
            [
                "a4d9a00c8834406b"
            ]
        ],
        "icon": "font-awesome/fa-filter"
    },
    {
        "id": "11b404a1964950b3",
        "type": "function",
        "z": "e93be114ec7eee96",
        "name": "1 sur 5",
        "func": "let cpt = context.get(\"cpt\")||0;\nif(cpt <= 0) {\n    cpt = 4;\n    context.set(\"cpt\", cpt);\n    return msg;\n}\nelse {\n    cpt = cpt - 1;\n    context.set(\"cpt\", cpt);\n    return\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 440,
        "wires": [
            [
                "b26fda3e115daaf6"
            ]
        ],
        "icon": "font-awesome/fa-filter"
    },
    {
        "id": "7e5b1fe8b239865b",
        "type": "function",
        "z": "e93be114ec7eee96",
        "name": "1 sur 5",
        "func": "let cpt = context.get(\"cpt\")||0;\nif(cpt <= 0) {\n    cpt = 4;\n    context.set(\"cpt\", cpt);\n    return msg;\n}\nelse {\n    cpt = cpt - 1;\n    context.set(\"cpt\", cpt);\n    return\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 500,
        "wires": [
            [
                "a7f0b867c4cbbb51"
            ]
        ],
        "icon": "font-awesome/fa-filter"
    },
    {
        "id": "9bb086acdb48fca2",
        "type": "function",
        "z": "e93be114ec7eee96",
        "name": "1 sur 5",
        "func": "let cpt = context.get(\"cpt\")||0;\nif(cpt <= 0) {\n    cpt = 4;\n    context.set(\"cpt\", cpt);\n    return msg;\n}\nelse {\n    cpt = cpt - 1;\n    context.set(\"cpt\", cpt);\n    return\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 560,
        "wires": [
            [
                "e0a2a2006b905340"
            ]
        ],
        "icon": "font-awesome/fa-filter"
    },
    {
        "id": "1d2fcb3aa9803527",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "TLD",
        "group": "6003beaf3e655f88",
        "order": 3,
        "width": "3",
        "height": "1",
        "min": "10",
        "max": "60",
        "ticks": [
            {
                "value": "20",
                "label": ""
            },
            {
                "value": "40",
                "label": "40 max"
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(255, 76, 22)"
            },
            {
                "size": 60,
                "color": "rgb(0, 227, 0)"
            },
            {
                "size": 20,
                "color": "rgb(4, 50, 255)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "fullBar",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Logement Départ",
        "icon": "heating-coil",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "d2318810c0df82fe",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "TLR",
        "group": "6003beaf3e655f88",
        "order": 4,
        "width": "3",
        "height": "1",
        "min": "10",
        "max": "40",
        "ticks": [
            {
                "value": "20",
                "label": ""
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            },
            {
                "size": 33,
                "color": "rgb(4, 50, 255)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "default",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Logement Retour",
        "icon": " vngvm",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 610,
        "y": 200,
        "wires": []
    },
    {
        "id": "1be052351ee6fa2f",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "TCD",
        "group": "6003beaf3e655f88",
        "order": 5,
        "width": "3",
        "height": "1",
        "min": "10",
        "max": "80",
        "ticks": [
            {
                "value": "30",
                "label": ""
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            },
            {
                "size": 28,
                "color": "rgb(4, 50, 255)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "default",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Chaudière Départ",
        "icon": "fireplace",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 610,
        "y": 260,
        "wires": []
    },
    {
        "id": "75dac0e35bc3daba",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "TCR",
        "group": "6003beaf3e655f88",
        "order": 6,
        "width": "3",
        "height": "1",
        "min": "10",
        "max": "80",
        "ticks": [
            {
                "value": "20",
                "label": ""
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            },
            {
                "size": 14,
                "color": "rgb(4, 50, 255)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "default",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Chaudière Retour",
        "icon": "cggcjh",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "326625b2ba884847",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "TAD",
        "group": "51713a7681769857",
        "order": 4,
        "width": "3",
        "height": "1",
        "min": "10",
        "max": "70",
        "ticks": [
            {
                "value": "25",
                "label": ""
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            },
            {
                "size": 25,
                "color": "rgb(4, 50, 255)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "default",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Accumulateur Départ",
        "icon": "water-boiler",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 610,
        "y": 380,
        "wires": []
    },
    {
        "id": "08ebb80ccbf3d011",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "TAR",
        "group": "51713a7681769857",
        "order": 5,
        "width": "3",
        "height": "1",
        "min": "10",
        "max": "70",
        "ticks": [
            {
                "value": "20",
                "label": ""
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            },
            {
                "size": 16,
                "color": "rgb(4, 50, 255)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "default",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Accumulateur Retour",
        "icon": "mbmnbvm",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 610,
        "y": 440,
        "wires": []
    },
    {
        "id": "2d89271b20cbe9e8",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "TA1",
        "group": "51713a7681769857",
        "order": 6,
        "width": "3",
        "height": "1",
        "min": "10",
        "max": "80",
        "ticks": [
            {
                "value": "20",
                "label": ""
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            },
            {
                "size": 14,
                "color": "rgb(4, 50, 255)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "default",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Accumulateur 1",
        "icon": "dhjvhhrjvz",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 610,
        "y": 500,
        "wires": []
    },
    {
        "id": "79ea8cb40121c6d6",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "TA2",
        "group": "51713a7681769857",
        "order": 7,
        "width": "3",
        "height": "1",
        "min": "10",
        "max": "80",
        "ticks": [],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "fullBar",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Accumulateur 2",
        "icon": "mnvm",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 610,
        "y": 560,
        "wires": []
    },
    {
        "id": "813b082ae1f26a25",
        "type": "ui-chart",
        "z": "e93be114ec7eee96",
        "group": "51713a7681769857",
        "name": "Accumulateur",
        "label": "Accumulateur",
        "order": 8,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "HH:mm",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Température [°C]",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "10",
        "ymax": "80",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "false",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "removeOlderPoints": "",
        "colors": [
            "#ff0000",
            "#ffa200",
            "#00aaff",
            "#44ff00",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 640,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "9fda38105dc569a3",
        "type": "server-state-changed",
        "z": "e93be114ec7eee96",
        "name": "HA/SoledgeLan/VersRéseau",
        "server": "a5986c3613f86bbc",
        "version": 6,
        "outputs": 1,
        "exposeAsEntityConfig": "",
        "entities": {
            "entity": [
                "sensor.solaredge_lan_m1_ac_power"
            ],
            "substring": [],
            "regex": []
        },
        "outputInitially": false,
        "stateType": "str",
        "ifState": "",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputOnlyOnStateChange": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "Electricité vers réseau",
                "valueType": "str"
            }
        ],
        "x": 180,
        "y": 1060,
        "wires": [
            [
                "0a69a079815d92a0",
                "d790ea85e1b22aa9",
                "f0a9892442a456e5"
            ]
        ]
    },
    {
        "id": "0a69a079815d92a0",
        "type": "ui-chart",
        "z": "e93be114ec7eee96",
        "group": "bacaa95877a7dfb6",
        "name": "Solaire",
        "label": "",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "HH:mm",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Puissance [W]",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "-8500",
        "ymax": "8500",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "false",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "removeOlderPoints": "",
        "colors": [
            "#ffa200",
            "#2ca02c",
            "#2ca02c",
            "#217821",
            "#a347e1",
            "#ff0000",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "6",
        "className": "",
        "interpolation": "linear",
        "x": 720,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "d790ea85e1b22aa9",
        "type": "ui-gauge",
        "z": "e93be114ec7eee96",
        "name": "",
        "group": "45f5ebcd30441960",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Vers réseau",
        "units": "W",
        "icon": "transmission-tower-import",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "-8500",
                "color": "#ea5353"
            },
            {
                "from": "0",
                "color": "#5cd65c"
            }
        ],
        "min": "-8500",
        "max": "8500",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 730,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "eeeb26955325ad9d",
        "type": "ui-gauge",
        "z": "e93be114ec7eee96",
        "name": "",
        "group": "45f5ebcd30441960",
        "order": 3,
        "width": "3",
        "height": "3",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Vers réseau",
        "units": "W",
        "icon": "transmission-tower-import",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "-8000",
                "color": "#ea5353"
            },
            {
                "from": "0",
                "color": "#5cd65c"
            }
        ],
        "min": "-8000",
        "max": "8000",
        "sizeThickness": "12",
        "sizeGap": "4",
        "sizeKeyThickness": "8",
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 1210,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "6b96feefa1ba3501",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "1000",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1000",
        "payloadType": "num",
        "x": 1010,
        "y": 1360,
        "wires": [
            [
                "eeeb26955325ad9d",
                "d6488720c367bd8e",
                "1e3162e31d127764"
            ]
        ]
    },
    {
        "id": "dfe30066a4964c21",
        "type": "inject",
        "z": "e93be114ec7eee96",
        "name": "-1000",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-1000",
        "payloadType": "num",
        "x": 1010,
        "y": 1400,
        "wires": [
            [
                "eeeb26955325ad9d",
                "d6488720c367bd8e",
                "1e3162e31d127764"
            ]
        ]
    },
    {
        "id": "d6488720c367bd8e",
        "type": "ui-gauge",
        "z": "e93be114ec7eee96",
        "name": "",
        "group": "45f5ebcd30441960",
        "order": 4,
        "width": "3",
        "height": "2",
        "gtype": "gauge-half",
        "gstyle": "rounded",
        "title": "Vers réseau",
        "units": "W",
        "icon": "transmission-tower-import",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "-8000",
                "color": "#ea5353"
            },
            {
                "from": "0",
                "color": "#5cd65c"
            }
        ],
        "min": "-8000",
        "max": "8000",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 1210,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "1e3162e31d127764",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "T. Sol",
        "group": "45f5ebcd30441960",
        "order": 5,
        "width": 0,
        "height": 0,
        "min": "-4000",
        "max": "4000",
        "ticks": [
            {
                "value": "0",
                "label": ""
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "zeroCross",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Tempérarure Sol",
        "icon": "wall-sconce-flat-variant",
        "unit": "°C",
        "dim": 0.2,
        "property": "payload",
        "decimals": "1",
        "zeros": true,
        "myclass": "",
        "x": 1190,
        "y": 1320,
        "wires": []
    },
    {
        "id": "f0a9892442a456e5",
        "type": "ui-gauge-linear",
        "z": "e93be114ec7eee96",
        "name": "Vers Réseau",
        "group": "bacaa95877a7dfb6",
        "order": 1,
        "width": 0,
        "height": 0,
        "min": "-8500",
        "max": "8500",
        "ticks": [
            {
                "value": "1000",
                "label": ""
            },
            {
                "value": "2000",
                "label": ""
            },
            {
                "value": "3000",
                "label": ""
            },
            {
                "value": "4000",
                "label": ""
            },
            {
                "value": "5000",
                "label": ""
            },
            {
                "value": "6000",
                "label": ""
            },
            {
                "value": "7000",
                "label": ""
            }
        ],
        "colors": [
            {
                "size": 100,
                "color": "rgb(0, 227, 0)"
            }
        ],
        "zeroCrossColors": [
            "#ff4c16",
            "#00e300"
        ],
        "mode": "zeroCross",
        "bar": "solid",
        "minLabel": "",
        "maxLabel": "",
        "label": "Vers Réseau",
        "icon": "transmission-tower-import",
        "unit": "W",
        "dim": 0.2,
        "property": "payload",
        "decimals": "0",
        "zeros": false,
        "myclass": "",
        "x": 730,
        "y": 1060,
        "wires": []
    },
    {
        "id": "85273cd58002e3bb",
        "type": "debug",
        "z": "3e956768f5245111",
        "name": "niveau",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 580,
        "wires": []
    },
    {
        "id": "995a33bbd23af197",
        "type": "change",
        "z": "3e956768f5245111",
        "name": "CLY",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "etat",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 500,
        "wires": [
            [
                "01dff4354e692f94",
                "1e97cf5543b7d22e"
            ]
        ]
    },
    {
        "id": "f1e361a0446d1d25",
        "type": "mqtt out",
        "z": "3e956768f5245111",
        "d": true,
        "name": "",
        "topic": "RPC/CLY",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ee5cd5699662a4d3",
        "x": 880,
        "y": 460,
        "wires": []
    },
    {
        "id": "54cc4035a3f1b13a",
        "type": "switch",
        "z": "3e956768f5245111",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 1420,
        "wires": [
            [
                "b7219f5cf8abdf16"
            ],
            [
                "083a7d9e9a81f371"
            ]
        ]
    },
    {
        "id": "b7219f5cf8abdf16",
        "type": "change",
        "z": "3e956768f5245111",
        "name": "save preTS",
        "rules": [
            {
                "t": "set",
                "p": "preTSi",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1400,
        "wires": [
            [
                "e49d7c56024c681b"
            ]
        ]
    },
    {
        "id": "e49d7c56024c681b",
        "type": "debug",
        "z": "3e956768f5245111",
        "name": "niveau",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1400,
        "wires": []
    },
    {
        "id": "083a7d9e9a81f371",
        "type": "change",
        "z": "3e956768f5245111",
        "name": "timeStamp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1440,
        "wires": [
            [
                "9cd2b245bd5bcbb3"
            ]
        ]
    },
    {
        "id": "9cd2b245bd5bcbb3",
        "type": "function",
        "z": "3e956768f5245111",
        "name": "diff",
        "func": "let preTS = flow.get(\"preTSi\");\nlet diff = msg.payload - preTS;\nmsg.payload = diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1440,
        "wires": [
            [
                "46267626942e9bb4"
            ]
        ]
    },
    {
        "id": "46267626942e9bb4",
        "type": "mqtt out",
        "z": "3e956768f5245111",
        "name": "",
        "topic": "node-red/temps",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ee5cd5699662a4d3",
        "x": 760,
        "y": 1440,
        "wires": []
    },
    {
        "id": "a4082701705b22e7",
        "type": "comment",
        "z": "3e956768f5245111",
        "name": "CLY - Vanne logement",
        "info": "",
        "x": 140,
        "y": 400,
        "wires": []
    },
    {
        "id": "43741dfa51219dc0",
        "type": "debug",
        "z": "3e956768f5245111",
        "name": "niveau",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 360,
        "wires": []
    },
    {
        "id": "de9a300b5c52cb12",
        "type": "mqtt out",
        "z": "3e956768f5245111",
        "d": true,
        "name": "",
        "topic": "RPC/CCY",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ee5cd5699662a4d3",
        "x": 900,
        "y": 120,
        "wires": []
    },
    {
        "id": "3353bc0069f2d425",
        "type": "comment",
        "z": "3e956768f5245111",
        "name": "CCY - Vanne Chaudière",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "062edfa7f5fd6919",
        "type": "mqtt out",
        "z": "3e956768f5245111",
        "name": "",
        "topic": "node-red/vanne/test",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "ee5cd5699662a4d3",
        "x": 820,
        "y": 900,
        "wires": []
    },
    {
        "id": "916a186b38a84b92",
        "type": "comment",
        "z": "3e956768f5245111",
        "name": "TEST - Vanne",
        "info": "",
        "x": 110,
        "y": 820,
        "wires": []
    },
    {
        "id": "a4b4e8b00cccdb8b",
        "type": "function",
        "z": "3e956768f5245111",
        "name": "Calculs",
        "func": "\nlet tmpMov = 10000;\nlet niveau = context.get(\"niveau\")||0;\nlet dep = context.get(\"dep\");\nlet delta;\nlet actif = context.get(\"actif\"||\"static\");\nlet count = context.get(\"count\"||1);\nlet msg3\n\nif(msg.topic == \"update\"){ // executé toutes les 10''\n    if(actif != \"static\") \n        count = count + 1;\n    else\n        count = 1;\n    context.set(\"count\", count);    \n    if(count > (tmpMov / 1000) + 2) {\n        if(actif == \"ouv\")\n            niveau = tmpMov;\n        else\n            niveau = 0;\n        context.set(\"niveau\", niveau); \n        msg.payload = niveau / 100;\n        return [msg, msg]\n    }\n    msg.payload = count;\n    return [null, msg];\n}\nelse {\n    if(msg.payload == 0) { // activation\n        if (msg.sens == \"ouv\")\n            context.set(\"actif\", \"ouv\");\n        else\n            context.set(\"actif\", \"fer\");\n        dep = Date.now();\n        context.set(\"dep\", dep)\n        msg3 =  {payload: \"act\"};\n        return [null, msg3];\n    }\n\n    if(msg.payload == 1) { // désactivation\n        context.set(\"actif\", \"static\");\n        delta = Date.now() - dep;\n        if (msg.sens == \"ouv\")\n            niveau = niveau + delta;\n        else\n            niveau = niveau - delta;\n        if(niveau < 0)\n            niveau = 0;\n        if(niveau > tmpMov)\n            niveau = tmpMov\n        context.set(\"niveau\", niveau)\n        msg.payload = Math.round(niveau / 100);\n        msg3 = { payload: \"des\" };\n        return [msg, msg3];\n    }\n}\nreturn;\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 920,
        "wires": [
            [
                "c71c81def82e8b80",
                "703a1ef054a742c2",
                "847ff168e4d3acc8"
            ],
            [
                "5b98602ee94d280e"
            ]
        ]
    },
    {
        "id": "58b90eb770512add",
        "type": "debug",
        "z": "3e956768f5245111",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "sens",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1020,
        "wires": []
    },
    {
        "id": "a5d146d32b3c4f0c",
        "type": "change",
        "z": "3e956768f5245111",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sens",
                "pt": "msg",
                "to": "ouv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 880,
        "wires": [
            [
                "58b90eb770512add",
                "a4b4e8b00cccdb8b",
                "aed432ffa43f97a1"
            ]
        ]
    },
    {
        "id": "aa90657db76828ca",
        "type": "change",
        "z": "3e956768f5245111",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sens",
                "pt": "msg",
                "to": "fer",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 940,
        "wires": [
            [
                "58b90eb770512add",
                "a4b4e8b00cccdb8b",
                "aed432ffa43f97a1"
            ]
        ]
    },
    {
        "id": "c71c81def82e8b80",
        "type": "debug",
        "z": "3e956768f5245111",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 960,
        "wires": []
    },
    {
        "id": "5b98602ee94d280e",
        "type": "debug",
        "z": "3e956768f5245111",
        "name": "s2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e09bc80632e2d7c4",
        "type": "inject",
        "z": "3e956768f5245111",
        "name": "2'' pulse",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "update",
        "x": 290,
        "y": 800,
        "wires": [
            [
                "a4b4e8b00cccdb8b"
            ]
        ]
    },
    {
        "id": "92d92f59f10198f9",
        "type": "inject",
        "z": "3e956768f5245111",
        "name": "2'' pulse",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "update",
        "payloadType": "str",
        "x": 400,
        "y": 380,
        "wires": [
            [
                "a30e7dd0e62c81bb",
                "1e97cf5543b7d22e"
            ]
        ]
    },
    {
        "id": "d8d8f81fde09c97f",
        "type": "inject",
        "z": "3e956768f5245111",
        "name": "fermer",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "061efe1320bbe02b",
        "type": "inject",
        "z": "3e956768f5245111",
        "name": "arreter",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 90,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "88bb9e30a9a75cc5",
        "type": "function",
        "z": "3e956768f5245111",
        "name": "filtre",
        "func": "\nlet msgCLY = { topic: \"Logement\", payload: flow.get(\"niveauCLY\") };\nlet msgCCY = { topic: \"Chaudière\", payload: flow.get(\"niveauCCY\") };\nreturn [msgCCY, msgCLY]; \n\n\n/*\nif (msg.topic == \"Update\") {\n    nivL = context.get(\"nivL\");\n    nivC = context.get(\"nivC\");\n    msgL = { topic: \"Logement\", payload: nivL };\n    msgC = { topic: \"Chaudière\", payload: nivC };\n    return [msgC, msgL];   \n}\n\nif(msg.topic == \"L\") {\n    nivL = msg.payload;    \n    context.set(\"nivL\", nivL);\n    nivC = context.get(\"nivC\");\n    msgL = { topic: \"Logement\", payload: nivL };\n    msgC = { topic: \"Chaudière\", payload: nivC };    \n    return [msgC, msgL];\n}\n\nif (msg.topic == \"C\") {\n    nivC = msg.payload;\n    context.set(\"nivC\", nivC);\n    nivL = context.get(\"nivL\");\n    msgL = { topic: \"Logement\", payload: nivL };\n    msgC = { topic: \"Chaudière\", payload: nivC };\n    return [msgC, msgL];\n}\n\n\nreturn;*/",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 360,
        "wires": [
            [
                "619074547a3bd5c3",
                "56e3c5968bd5d483"
            ],
            [
                "619074547a3bd5c3",
                "56e3c5968bd5d483"
            ]
        ]
    },
    {
        "id": "3de3ca5922265b81",
        "type": "inject",
        "z": "3e956768f5245111",
        "name": "Clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 690,
        "y": 400,
        "wires": [
            [
                "619074547a3bd5c3"
            ]
        ]
    },
    {
        "id": "56e3c5968bd5d483",
        "type": "debug",
        "z": "3e956768f5245111",
        "name": "filtre",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 400,
        "wires": []
    },
    {
        "id": "9ae6403fb6c8d02b",
        "type": "function",
        "z": "3e956768f5245111",
        "name": "Calculs vanne",
        "func": "// paramètres\nconst tmpMov = 205001; // temps de ouv/fer de la vanne en ms\nconst topic = \"Logement\";\nconst nom = \"niveauL\";\n\n// Code commun ------------------------------------\nlet niveau = flow.get(nom) || 0;\nlet dep = context.get(\"dep\");                // timestamp départ\nlet etat = context.get(\"etat\") || \"stat\";\nlet dbg = { payload: etat, niveau: niveau, type: msg.update, dep: dep };\n\nif (!msg.update)\n    switch (etat) { // gestion de l'état\n        case \"stat\":\n            if (msg.sens == \"ouv\" && msg.etat == 0) {\n                etat = \"ouv\";\n                dep = Date.now();\n            }\n            else if (msg.sens == \"fer\" && msg.etat == 0) {\n                etat = \"fer\";\n                dep = Date.now();\n            }\n            break;\n        case \"ouv\":\n            if (msg.etat == 1) {\n                etat = \"stat\";\n                niveau = niveau + calcul();\n            }\n            break;\n        case \"fer\":\n            if (msg.etat == 1) {\n                etat = \"stat\";\n                niveau = niveau - calcul();\n            }\n    }\n\n\nif (msg.update) { // mise à jour\n    switch (etat) {\n        case \"stat\":\n            break;\n        case \"ouv\":\n            niveau = niveau + calcul();\n            dep = Date.now();\n            break;\n        case \"fer\":\n            niveau = niveau - calcul();\n            dep = Date.now();\n            break;\n    }\n}\n\n// controle limite min/max\nif (niveau >= 100) {\n    niveau = 100;\n}\nelse if (niveau <= 0) {\n    niveau = 0;\n}\n\n// enregistrement des valeurs\ncontext.set(\"etat\", etat);\ncontext.set(\"dep\", dep);\nflow.set(nom, niveau);\n\n// messages\nif (msg.update) {\n    if (niveau == 0 || niveau == 100) {\n        msg.payload = niveau;\n        return [msg, msg, dbg];\n    }\n    return [null, msg, dbg];\n}\nelse {\n    msg.payload = niveau;\n    return [msg, msg, dbg];\n}\n\n\nfunction calcul() {\n    let deltaT = Date.now() - dep;\n    let deltaN = 100 * deltaT / tmpMov;\n    return deltaN;\n}\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 720,
        "wires": [
            [],
            [],
            []
        ],
        "outputLabels": [
            "Valeur",
            "Graph",
            "debug"
        ]
    },
    {
        "id": "aed432ffa43f97a1",
        "type": "simpletime",
        "z": "3e956768f5245111",
        "name": "maintenant",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": true,
        "mymonthn": false,
        "mydom": true,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": false,
        "mypm": false,
        "x": 470,
        "y": 1160,
        "wires": [
            [
                "950b7bcca1b67ab7"
            ]
        ]
    },
    {
        "id": "01dff4354e692f94",
        "type": "simpletime",
        "z": "3e956768f5245111",
        "name": "maintenant",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": true,
        "mymonthn": false,
        "mydom": true,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": false,
        "mypm": false,
        "x": 490,
        "y": 620,
        "wires": [
            [
                "ab60f83fa3fdf4dd"
            ]
        ]
    },
    {
        "id": "c6a775c1cba2e89b",
        "type": "simpletime",
        "z": "3e956768f5245111",
        "name": "maintenant",
        "mydate": false,
        "myymd": false,
        "myyear": false,
        "mymonth": true,
        "mymonthn": false,
        "mydom": true,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": false,
        "mytimes": true,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": false,
        "mypm": false,
        "x": 470,
        "y": 280,
        "wires": [
            [
                "d47c933821101091"
            ]
        ]
    },
    {
        "id": "25dc77b3eacfa13d",
        "type": "ui_switch",
        "z": "3e956768f5245111",
        "name": "",
        "label": "actif",
        "tooltip": "",
        "group": "a3d953c2586eeab6",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "payload",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 70,
        "y": 1420,
        "wires": [
            [
                "54cc4035a3f1b13a"
            ]
        ]
    },
    {
        "id": "7053cad594abe61a",
        "type": "ui_switch",
        "z": "3e956768f5245111",
        "name": "",
        "label": "ouvrir 2",
        "tooltip": "",
        "group": "b8afcfa2a2fbe81e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "payload",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 100,
        "y": 880,
        "wires": [
            [
                "a5d146d32b3c4f0c",
                "836b8ffa3a8a1e90"
            ]
        ]
    },
    {
        "id": "d9ab29424bac4340",
        "type": "ui_switch",
        "z": "3e956768f5245111",
        "name": "",
        "label": "fermer 2",
        "tooltip": "",
        "group": "b8afcfa2a2fbe81e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "payload",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 100,
        "y": 940,
        "wires": [
            [
                "aa90657db76828ca",
                "166d691b6252c73e"
            ]
        ]
    },
    {
        "id": "ab60f83fa3fdf4dd",
        "type": "ui_text",
        "z": "3e956768f5245111",
        "group": "2332cad7958df7f2",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "dernier changement",
        "format": "{{msg.mydom}} {{msg.mymonth}} {{msg.mytimes}} ",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 720,
        "y": 620,
        "wires": []
    },
    {
        "id": "d47c933821101091",
        "type": "ui_text",
        "z": "3e956768f5245111",
        "group": "2332cad7958df7f2",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "dernier changement",
        "format": "{{msg.mydom}} {{msg.mymonth}} {{msg.mytimes}} ",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 680,
        "y": 280,
        "wires": []
    },
    {
        "id": "950b7bcca1b67ab7",
        "type": "ui_text",
        "z": "3e956768f5245111",
        "group": "b8afcfa2a2fbe81e",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "dernier changement",
        "format": "{{msg.mydom}} {{msg.mymonth}} {{msg.mytimes}} ",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 700,
        "y": 1160,
        "wires": []
    },
    {
        "id": "703a1ef054a742c2",
        "type": "ui_gauge",
        "z": "3e956768f5245111",
        "name": "",
        "group": "b8afcfa2a2fbe81e",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "test 2",
        "label": "%",
        "format": "{{value}} ",
        "min": "-10",
        "max": "110",
        "colors": [
            "#feffff",
            "#00f900",
            "#feffff"
        ],
        "seg1": "0",
        "seg2": "100",
        "diff": false,
        "className": "",
        "x": 630,
        "y": 900,
        "wires": []
    },
    {
        "id": "847ff168e4d3acc8",
        "type": "ui_chart",
        "z": "3e956768f5245111",
        "name": "graph test",
        "group": "b8afcfa2a2fbe81e",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "test",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 650,
        "y": 860,
        "wires": [
            [
                "f95af0d6079542ea"
            ]
        ]
    },
    {
        "id": "f95af0d6079542ea",
        "type": "ui_chart",
        "z": "3e956768f5245111",
        "name": "graph test",
        "group": "b8afcfa2a2fbe81e",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "test",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff2600",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 860,
        "wires": [
            [
                "6c63b8b8a66dd4b9"
            ]
        ]
    },
    {
        "id": "6c63b8b8a66dd4b9",
        "type": "ui_chart",
        "z": "3e956768f5245111",
        "name": "graph test",
        "group": "b8afcfa2a2fbe81e",
        "order": 9,
        "width": 0,
        "height": 0,
        "label": "test",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "619074547a3bd5c3",
        "type": "ui_chart",
        "z": "3e956768f5245111",
        "name": "",
        "group": "2332cad7958df7f2",
        "order": 9,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff2600",
            "#00f900",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 890,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "10999e811dc53e11",
        "type": "ui_led",
        "z": "3e956768f5245111",
        "order": 7,
        "group": "2332cad7958df7f2",
        "width": "3",
        "height": "1",
        "label": "Ouverture",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "ouverture",
        "x": 280,
        "y": 540,
        "wires": []
    },
    {
        "id": "520dde8b57fae339",
        "type": "ui_led",
        "z": "3e956768f5245111",
        "order": 8,
        "group": "2332cad7958df7f2",
        "width": "3",
        "height": "1",
        "label": "Fermeture",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "fermeture",
        "x": 280,
        "y": 580,
        "wires": []
    },
    {
        "id": "836b8ffa3a8a1e90",
        "type": "ui_led",
        "z": "3e956768f5245111",
        "order": 4,
        "group": "b8afcfa2a2fbe81e",
        "width": "3",
        "height": "1",
        "label": "Ouverture",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "ouverture",
        "x": 260,
        "y": 840,
        "wires": []
    },
    {
        "id": "166d691b6252c73e",
        "type": "ui_led",
        "z": "3e956768f5245111",
        "order": 5,
        "group": "b8afcfa2a2fbe81e",
        "width": "3",
        "height": "1",
        "label": "Fermeture",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "fermeture",
        "x": 240,
        "y": 980,
        "wires": []
    },
    {
        "id": "12757e81754fa134",
        "type": "ui_led",
        "z": "3e956768f5245111",
        "order": 3,
        "group": "2332cad7958df7f2",
        "width": "3",
        "height": "1",
        "label": "Ouverture",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "ouverture",
        "x": 260,
        "y": 200,
        "wires": []
    },
    {
        "id": "31a4fe42ea4c92a8",
        "type": "ui_led",
        "z": "3e956768f5245111",
        "order": 4,
        "group": "2332cad7958df7f2",
        "width": "3",
        "height": "1",
        "label": "Fermeture",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "fermeture",
        "x": 260,
        "y": 240,
        "wires": []
    },
    {
        "id": "8fb3a3272e2d5016",
        "type": "ui_led",
        "z": "3e956768f5245111",
        "order": 6,
        "group": "3e7a3cf8909ee831",
        "width": "6",
        "height": "1",
        "label": "CSP Pompe solaire",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "CSP",
        "x": 1310,
        "y": 280,
        "wires": []
    },
    {
        "id": "c2513cf790536abc",
        "type": "ui_level",
        "z": "3e956768f5245111",
        "group": "2332cad7958df7f2",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Logement",
        "label": "Logement",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "%",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "soft",
        "shape": 2,
        "colorschema": "valuedriven",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 740,
        "y": 520,
        "wires": []
    },
    {
        "id": "a492b04044599347",
        "type": "ui_level",
        "z": "3e956768f5245111",
        "group": "2332cad7958df7f2",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Chaudière",
        "label": "Chaudière",
        "colorHi": "#e60000",
        "colorWarn": "#ff9900",
        "colorNormal": "#00b33c",
        "colorOff": "#595959",
        "min": 0,
        "max": 100,
        "segWarn": "",
        "segHigh": "",
        "unit": "%",
        "layout": "sh",
        "channelA": "",
        "channelB": "",
        "decimals": 0,
        "animations": "soft",
        "shape": 2,
        "colorschema": "fixed",
        "textoptions": "default",
        "colorText": "#eeeeee",
        "fontLabel": "",
        "fontValue": "",
        "fontSmall": "",
        "colorFromTheme": true,
        "textAnimations": false,
        "hideValue": false,
        "tickmode": "off",
        "peakmode": false,
        "property": "payload",
        "peaktime": 3000,
        "x": 710,
        "y": 180,
        "wires": []
    },
    {
        "id": "abad97d67404ecc4",
        "type": "ha-sensor",
        "z": "3e956768f5245111",
        "name": "CLY",
        "entityConfig": "9a43012384bbadb9",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 730,
        "y": 460,
        "wires": [
            [
                "f1e361a0446d1d25"
            ]
        ]
    },
    {
        "id": "02ccb24887f49a6d",
        "type": "ha-sensor",
        "z": "3e956768f5245111",
        "name": "CCY",
        "entityConfig": "20c5e4ed7e69d462",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 710,
        "y": 120,
        "wires": [
            [
                "de9a300b5c52cb12"
            ]
        ]
    },
    {
        "id": "7c5d67fed9a4b7cb",
        "type": "link in",
        "z": "3e956768f5245111",
        "name": "CLY-O",
        "links": [
            "19ea1bd7533f7474"
        ],
        "x": 55,
        "y": 500,
        "wires": [
            [
                "995a33bbd23af197",
                "3f0771a356d89604"
            ]
        ]
    },
    {
        "id": "585b3fd626f7518c",
        "type": "link in",
        "z": "3e956768f5245111",
        "name": "CCY-O",
        "links": [
            "da2299bc9bf7e886"
        ],
        "x": 45,
        "y": 160,
        "wires": [
            [
                "907cb996001733da",
                "60b95deba4548ef3"
            ]
        ]
    },
    {
        "id": "c1534d3296bfab41",
        "type": "ui-table",
        "z": "3e956768f5245111",
        "group": "45f5ebcd30441960",
        "name": "",
        "label": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "maxrows": "10",
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "append",
        "x": 690,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3a94dfcbfc658da3",
        "type": "debug",
        "z": "3e956768f5245111",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 420,
        "wires": []
    },
    {
        "id": "a30e7dd0e62c81bb",
        "type": "function",
        "z": "3e956768f5245111",
        "name": "f. vanne",
        "func": "// paramètres\nconst tempsMouvement = 205001; // temps de ouv/fer de la vanne en ms\nconst nom = \"niveauCCY\";\n\n\n// Code commun ------------------------------------\nlet niveau = context.get(\"niveau\") || 0;\n\n// Détermine l'état de la vanne\nlet etat = context.get(\"etat\") || \"arret\";\nif (msg.etat === true) {\t\n\tcontext.set(\"tempsDepart\", Date.now());\t// timestamp départ\n\tcontext.set(\"niveauDepart\", niveau);\t\t// \t\t\n\tif (msg.sens == \"ouv\") {\n\t\tetat = \"ouverture\";\n    }\n\telse if (msg.sens == \"fer\") {\n\t\tetat = \"fermeture\";\n\t}\n}\nelse if (msg.etat === false) {\n\tlet niveauActuel = calcul();\t\n\tetat = \"arret\";\n\tcontext.set(\"etat\", etat);\t\n\tmsg.payload = niveauActuel;\n\t//msg.debug = 888;\n\tcontext.set(\"niveau\", niveauActuel);\n\treturn msg;\n}\ncontext.set(\"etat\", etat);\n\t\n\n// update\nif (msg.payload == \"update\" && etat != \"arret\") {\n\tmsg.payload = calcul();\n\treturn msg;\n} \n\n// calcul\nfunction calcul() {\n\tlet tempsActuel = Date.now();\n\tlet tempsDepart = context.get(\"tempsDepart\");\n\tlet niveauDepart = context.get(\"niveauDepart\");\n    let tempsDelta = tempsActuel - tempsDepart;\n    let niveauDelta = 100 * tempsDelta / tempsMouvement;\n\tif (etat == \"fermeture\") niveauDelta =- niveauDelta\n\tlet niveauActuel = niveau + niveauDelta\n\tif (niveauActuel >= 100) niveauActuel = 100;\n\tif (niveauActuel <= 0) niveauActuel = 0; \n\tflow.set(nom, niveauActuel);\n    return niveauActuel;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 160,
        "wires": [
            [
                "c823078f7702b640",
                "a492b04044599347",
                "88bb9e30a9a75cc5",
                "c1534d3296bfab41"
            ]
        ]
    },
    {
        "id": "c823078f7702b640",
        "type": "debug",
        "z": "3e956768f5245111",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 60,
        "wires": []
    },
    {
        "id": "1e97cf5543b7d22e",
        "type": "function",
        "z": "3e956768f5245111",
        "name": "f. vanne",
        "func": "// paramètres\nconst tempsMouvement = 205001; // temps de ouv/fer de la vanne en ms\nconst nom = \"niveauCLY\";\n\n\n// Code commun ------------------------------------\nlet niveau = context.get(\"niveau\") || 0;\n\n// Détermine l'état de la vanne\nlet etat = context.get(\"etat\") || \"arret\";\nif (msg.etat === true) {\t\n\tcontext.set(\"tempsDepart\", Date.now());\t// timestamp départ\n\tcontext.set(\"niveauDepart\", niveau);\t\t// \t\t\n\tif (msg.sens == \"ouv\") {\n\t\tetat = \"ouverture\";\n    }\n\telse if (msg.sens == \"fer\") {\n\t\tetat = \"fermeture\";\n\t}\n}\nelse if (msg.etat === false) {\n\tlet niveauActuel = calcul();\t\n\tetat = \"arret\";\n\tcontext.set(\"etat\", etat);\t\n\tmsg.payload = niveauActuel;\n\t//msg.debug = 888;\n\tcontext.set(\"niveau\", niveauActuel);\n\treturn msg;\n}\ncontext.set(\"etat\", etat);\n\t\n\n// update\nif (msg.payload == \"update\" && etat != \"arret\") {\n\tmsg.payload = calcul();\n\treturn msg;\n} \n\n// calcul\nfunction calcul() {\n\tlet tempsActuel = Date.now();\n\tlet tempsDepart = context.get(\"tempsDepart\");\n\tlet niveauDepart = context.get(\"niveauDepart\");\n    let tempsDelta = tempsActuel - tempsDepart;\n    let niveauDelta = 100 * tempsDelta / tempsMouvement;\n\tif (etat == \"fermeture\") niveauDelta =- niveauDelta\n\tlet niveauActuel = niveau + niveauDelta\n\tif (niveauActuel >= 100) niveauActuel = 100;\n\tif (niveauActuel <= 0) niveauActuel = 0; \n\tflow.set(nom, niveauActuel);\n    return niveauActuel;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 500,
        "wires": [
            [
                "88bb9e30a9a75cc5",
                "c2513cf790536abc",
                "c1534d3296bfab41"
            ]
        ]
    },
    {
        "id": "907cb996001733da",
        "type": "change",
        "z": "3e956768f5245111",
        "name": "CCY",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "etat",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 160,
        "wires": [
            [
                "a30e7dd0e62c81bb",
                "c6a775c1cba2e89b"
            ]
        ]
    },
    {
        "id": "60b95deba4548ef3",
        "type": "function",
        "z": "3e956768f5245111",
        "name": "sens",
        "func": "if (msg.payload === true) {\n    if (msg.sens === \"ouv\") return [msg, null];\n    else if (msg.sens === \"fer\") return [null, msg];\n    else return;\n}\nelse if (msg.payload === false) return [msg, msg];\nreturn;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 220,
        "wires": [
            [
                "12757e81754fa134"
            ],
            [
                "31a4fe42ea4c92a8"
            ]
        ]
    },
    {
        "id": "3f0771a356d89604",
        "type": "function",
        "z": "3e956768f5245111",
        "name": "sens",
        "func": "if (msg.payload === true) {\n    if (msg.sens === \"ouv\") return [msg, null];\n    else if (msg.sens === \"fer\") return [null, msg];\n    else return;\n}\nelse if (msg.payload === false) return [msg, msg];\nreturn;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 560,
        "wires": [
            [
                "10999e811dc53e11"
            ],
            [
                "520dde8b57fae339"
            ]
        ]
    },
    {
        "id": "5e8fae4cafe2e3a0",
        "type": "inject",
        "z": "3e956768f5245111",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "test",
        "payloadType": "str",
        "x": 570,
        "y": 720,
        "wires": [
            [
                "c1534d3296bfab41"
            ]
        ]
    },
    {
        "id": "9be7c60a8eaecbf3",
        "type": "inject",
        "z": "d9f73d01aefd6cf4",
        "name": "temp ext",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 200,
        "y": 220,
        "wires": [
            [
                "20e530a70ff31e62"
            ]
        ]
    },
    {
        "id": "4964d38f7336401b",
        "type": "inject",
        "z": "d9f73d01aefd6cf4",
        "name": "30",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "30",
        "payloadType": "num",
        "x": 270,
        "y": 100,
        "wires": [
            [
                "828f2a56900c3e2b"
            ]
        ]
    },
    {
        "id": "50944611e39f5802",
        "type": "function",
        "z": "d9f73d01aefd6cf4",
        "name": "calculs",
        "func": "\n\nlet data = {\n    \"tex\": global.get(\"tex\"),\n    \"tch\": null,\n    \"Cax\" : -30,\n    \"Caby\": flow.get(\"max\"),\n    \"Cbx\" :  null,\n    \"Ccdx\": flow.get(\"fin\"),\n    \"Ccy\" : null,\n    \"Cdy\" : 0,\n    \"Sax\" : -30,\n    \"Saby\" : flow.get(\"Smax\"),\n    \"Sbcx\" : flow.get(\"Sfin\"),\n    \"Scy\"  : 0,\n    \"px\" : null,\n    \"py\" : null\n}\n\nlet lx = flow.get(\"lx\");\nlet ly = flow.get(\"ly\");\nlet rx = flow.get(\"rx\");\nlet ry = flow.get(\"ry\");\n\nlet pente = (ly - ry) / (rx - lx);\ndata.Cbx = (ly - data.Caby) / pente + lx;\ndata.Ccy = (lx - data.Ccdx) * pente + ly;\n\ndata.tch = Math.round((lx - data.tex) * pente + ly); // zone 1\nif (data.tex < data.Cbx) { // zone 0\n    data.tch = data.Caby;\n}\nelse if (data.tex > data.Ccdx) { // zone 2\n    data.tch = 0;\n}\n\nmsg.payload = data\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "7bacc4b7f75fad17",
                "3dd689fb6bc01081",
                "4f3f94bfd8fedc0f",
                "22429eef8ca7bd5b"
            ]
        ]
    },
    {
        "id": "d5d9b2322f7a1dea",
        "type": "inject",
        "z": "d9f73d01aefd6cf4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "87aa5289e7479d17"
            ]
        ]
    },
    {
        "id": "7bacc4b7f75fad17",
        "type": "debug",
        "z": "d9f73d01aefd6cf4",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 220,
        "wires": []
    },
    {
        "id": "8c1c763132dcc65c",
        "type": "change",
        "z": "d9f73d01aefd6cf4",
        "name": "Max",
        "rules": [
            {
                "t": "set",
                "p": "max",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 280,
        "wires": [
            [
                "50944611e39f5802"
            ]
        ]
    },
    {
        "id": "87aa5289e7479d17",
        "type": "function",
        "z": "d9f73d01aefd6cf4",
        "name": "function 3",
        "func": "var max = { payload: 45 };\nvar fin = { payload: 19 };\nvar lx = { payload: -15 };\nvar ly = { payload: 40 };\nvar rx = { payload: 20 };\nvar ry = { payload: 21 };\nlet Smax = { payload: 40};\nlet Sfin = { payload: 25}\n\n\n\n\nreturn [\n    max,\n    fin,\n    lx,\n    ly,\n    rx,\n    ry,\n    Smax,\n    Sfin];",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 400,
        "wires": [
            [
                "828f2a56900c3e2b"
            ],
            [
                "98d8e8aff49acc54"
            ],
            [
                "c6972a686c04d8cf"
            ],
            [
                "1e2f41e848348e36"
            ],
            [
                "9e854107bb15d69c"
            ],
            [
                "7567a7c6e9885d40"
            ],
            [
                "dcf22d818db120d2"
            ],
            [
                "e4bc9c2891df6452"
            ]
        ]
    },
    {
        "id": "a6651abacd350aad",
        "type": "change",
        "z": "d9f73d01aefd6cf4",
        "name": "Fin",
        "rules": [
            {
                "t": "set",
                "p": "fin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 340,
        "wires": [
            [
                "50944611e39f5802"
            ]
        ]
    },
    {
        "id": "3f0df1236c4b832f",
        "type": "change",
        "z": "d9f73d01aefd6cf4",
        "name": "lx",
        "rules": [
            {
                "t": "set",
                "p": "lx",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 400,
        "wires": [
            [
                "50944611e39f5802"
            ]
        ]
    },
    {
        "id": "d8140710999bd3d0",
        "type": "change",
        "z": "d9f73d01aefd6cf4",
        "name": "ly",
        "rules": [
            {
                "t": "set",
                "p": "ly",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 460,
        "wires": [
            [
                "50944611e39f5802"
            ]
        ]
    },
    {
        "id": "d0bfabb9fd6a29dd",
        "type": "change",
        "z": "d9f73d01aefd6cf4",
        "name": "rx",
        "rules": [
            {
                "t": "set",
                "p": "rx",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 520,
        "wires": [
            [
                "50944611e39f5802"
            ]
        ]
    },
    {
        "id": "29e41266dbddcffa",
        "type": "change",
        "z": "d9f73d01aefd6cf4",
        "name": "ry",
        "rules": [
            {
                "t": "set",
                "p": "ry",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 580,
        "wires": [
            [
                "50944611e39f5802"
            ]
        ]
    },
    {
        "id": "20e530a70ff31e62",
        "type": "change",
        "z": "d9f73d01aefd6cf4",
        "name": "T ext",
        "rules": [
            {
                "t": "set",
                "p": "tex",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 220,
        "wires": [
            [
                "63cb7960f04f04f6"
            ]
        ]
    },
    {
        "id": "7261e683ba3d3e78",
        "type": "file",
        "z": "d9f73d01aefd6cf4",
        "name": "",
        "filename": "",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 120,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e66da9b8df870fb9",
        "type": "file in",
        "z": "d9f73d01aefd6cf4",
        "name": "",
        "filename": "",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 80,
        "y": 560,
        "wires": [
            [
                "87aa5289e7479d17"
            ]
        ]
    },
    {
        "id": "f1e0c413f0181cce",
        "type": "inject",
        "z": "d9f73d01aefd6cf4",
        "name": "Startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 620,
        "wires": [
            [
                "87aa5289e7479d17"
            ]
        ]
    },
    {
        "id": "3dd689fb6bc01081",
        "type": "function",
        "z": "d9f73d01aefd6cf4",
        "name": "vers graph",
        "func": "\nlet factX = 4.4;\nlet ofsetX = 162;\nlet factY = -4.4;\nlet ofsetY = 274;\n\n// remapage du graph au pixels\nlet Cax  = msg.payload.Cax  * factX + ofsetX;\nlet Caby = msg.payload.Caby * factY + ofsetY;\nlet Cbx  = msg.payload.Cbx  * factX + ofsetX;\nlet Ccdx = msg.payload.Ccdx * factX + ofsetX;\nlet Ccy  = msg.payload.Ccy  * factY + ofsetY;\nlet Cdy  = msg.payload.Cdy  * factY + ofsetY;\nlet Sax  = msg.payload.Sax  * factX + ofsetX;\nlet Saby = msg.payload.Saby * factY + ofsetY;\nlet Sbcx = msg.payload.Sbcx * factX + ofsetX;\nlet Scy  = msg.payload.Scy  * factY + ofsetY;\nlet px   = msg.payload.tex  * factX + ofsetX;\nlet py   = msg.payload.tch  * factY + ofsetY;\n\nmsg.payload.Cax  = Cax.toString();\nmsg.payload.Caby = Caby.toString();\nmsg.payload.Cbx  = Cbx.toString();\nmsg.payload.Ccdx = Ccdx.toString();\nmsg.payload.Ccy  = Ccy.toString();\nmsg.payload.Cdy  = Cdy.toString();\nmsg.payload.Sax  = Sax.toString();\nmsg.payload.Saby = Saby.toString();\nmsg.payload.Sbcx = Sbcx.toString();\nmsg.payload.Scy  = Scy.toString();\nmsg.payload.px   = px.toString();\nmsg.payload.py   = py.toString();\n\nmsg.topic = \"databind\"; // active la fonction databind dans le graphic\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 380,
        "wires": [
            [
                "12931448e09d8bb1",
                "d4b935bed9c2d026"
            ]
        ]
    },
    {
        "id": "d4b935bed9c2d026",
        "type": "debug",
        "z": "d9f73d01aefd6cf4",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 480,
        "wires": []
    },
    {
        "id": "2853ae24bcf6f8af",
        "type": "inject",
        "z": "d9f73d01aefd6cf4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 460,
        "y": 100,
        "wires": [
            [
                "50944611e39f5802"
            ]
        ]
    },
    {
        "id": "63cb7960f04f04f6",
        "type": "function",
        "z": "d9f73d01aefd6cf4",
        "name": "Filtre",
        "func": "let val = msg.payload;\n\nif (val > 50 || val < -50 ) {\n    val = 30;\n    \"erreur température\"\n}\n\nmsg.payload = val;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 220,
        "wires": [
            [
                "50944611e39f5802"
            ]
        ]
    },
    {
        "id": "3c97ef92b54b884b",
        "type": "change",
        "z": "d9f73d01aefd6cf4",
        "name": "S Max",
        "rules": [
            {
                "t": "set",
                "p": "Smax",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 640,
        "wires": [
            [
                "50944611e39f5802"
            ]
        ]
    },
    {
        "id": "3cf4eb80c509fab8",
        "type": "change",
        "z": "d9f73d01aefd6cf4",
        "name": "S Fin",
        "rules": [
            {
                "t": "set",
                "p": "Sfin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 700,
        "wires": [
            [
                "50944611e39f5802"
            ]
        ]
    },
    {
        "id": "828f2a56900c3e2b",
        "type": "ui_slider",
        "z": "d9f73d01aefd6cf4",
        "name": "Max",
        "label": "Max",
        "tooltip": "Sortie vers cicuit maximum",
        "group": "60ca80c6decd288a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": 0,
        "max": "60",
        "step": 1,
        "className": "",
        "x": 310,
        "y": 280,
        "wires": [
            [
                "8c1c763132dcc65c"
            ]
        ]
    },
    {
        "id": "98d8e8aff49acc54",
        "type": "ui_slider",
        "z": "d9f73d01aefd6cf4",
        "name": "Fin",
        "label": "Fin",
        "tooltip": "Arret du chauffage au dela de cette température",
        "group": "60ca80c6decd288a",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": "-30",
        "max": "30",
        "step": 1,
        "className": "",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "a6651abacd350aad"
            ]
        ]
    },
    {
        "id": "c6972a686c04d8cf",
        "type": "ui_slider",
        "z": "d9f73d01aefd6cf4",
        "name": "Point 1 X",
        "label": "Point 1 X",
        "tooltip": "Arret du chauffage au dela de cette température",
        "group": "60ca80c6decd288a",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": "-30",
        "max": "-1",
        "step": 1,
        "className": "",
        "x": 320,
        "y": 400,
        "wires": [
            [
                "3f0df1236c4b832f"
            ]
        ]
    },
    {
        "id": "1e2f41e848348e36",
        "type": "ui_slider",
        "z": "d9f73d01aefd6cf4",
        "name": "Point 1 Y",
        "label": "Point 1 Y",
        "tooltip": "Arret du chauffage au dela de cette température",
        "group": "60ca80c6decd288a",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": "0",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 320,
        "y": 460,
        "wires": [
            [
                "d8140710999bd3d0"
            ]
        ]
    },
    {
        "id": "9e854107bb15d69c",
        "type": "ui_slider",
        "z": "d9f73d01aefd6cf4",
        "name": "Point 2 X",
        "label": "Point 2 X",
        "tooltip": "Arret du chauffage au dela de cette température",
        "group": "60ca80c6decd288a",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": "1",
        "max": "30",
        "step": 1,
        "className": "",
        "x": 320,
        "y": 520,
        "wires": [
            [
                "d0bfabb9fd6a29dd"
            ]
        ]
    },
    {
        "id": "7567a7c6e9885d40",
        "type": "ui_slider",
        "z": "d9f73d01aefd6cf4",
        "name": "Point 2 Y",
        "label": "Point 2 Y",
        "tooltip": "Arret du chauffage au dela de cette température",
        "group": "60ca80c6decd288a",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": "0",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 320,
        "y": 580,
        "wires": [
            [
                "29e41266dbddcffa"
            ]
        ]
    },
    {
        "id": "dcf22d818db120d2",
        "type": "ui_slider",
        "z": "d9f73d01aefd6cf4",
        "name": "S Max",
        "label": "S Max",
        "tooltip": "Sortie vers cicuit maximum - Solaire",
        "group": "60ca80c6decd288a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": 0,
        "max": "60",
        "step": 1,
        "className": "",
        "x": 310,
        "y": 640,
        "wires": [
            [
                "3c97ef92b54b884b"
            ]
        ]
    },
    {
        "id": "e4bc9c2891df6452",
        "type": "ui_slider",
        "z": "d9f73d01aefd6cf4",
        "name": "S Fin",
        "label": "S Fin",
        "tooltip": "Arret du chauffage au dela de cette température - Solaire",
        "group": "60ca80c6decd288a",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": "-30",
        "max": "30",
        "step": 1,
        "className": "",
        "x": 310,
        "y": 700,
        "wires": [
            [
                "3cf4eb80c509fab8"
            ]
        ]
    },
    {
        "id": "4f3f94bfd8fedc0f",
        "type": "ui_text",
        "z": "d9f73d01aefd6cf4",
        "group": "60ca80c6decd288a",
        "order": 1,
        "width": "3",
        "height": "2",
        "name": "",
        "label": "Température exigée",
        "format": "{{msg.payload.tch}} °C",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 870,
        "y": 280,
        "wires": []
    },
    {
        "id": "22429eef8ca7bd5b",
        "type": "ui_text",
        "z": "d9f73d01aefd6cf4",
        "group": "60ca80c6decd288a",
        "order": 1,
        "width": "3",
        "height": "2",
        "name": "",
        "label": "Température extérieure",
        "format": "{{msg.payload.tex}} °C",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 830,
        "y": 160,
        "wires": []
    },
    {
        "id": "1d71cd5085ae11a4",
        "type": "ui_ui_control",
        "z": "d9f73d01aefd6cf4",
        "name": "",
        "events": "all",
        "x": 640,
        "y": 80,
        "wires": [
            [
                "50944611e39f5802"
            ]
        ]
    },
    {
        "id": "12931448e09d8bb1",
        "type": "ui_svg_graphics",
        "z": "d9f73d01aefd6cf4",
        "group": "60ca80c6decd288a",
        "order": 2,
        "width": 0,
        "height": 0,
        "svgString": "<svg x=\"0\" y=\"0\" height=\"300\" width=\"300\" xmlns=\"http://www.w3.org\n/2000/svg\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <rect width=\"300\" height=\"300\" style=\"fill:#CCCCCC\" />\n    <line x1=\"30\" y1=\"10\" x2=\"294\" y2=\"10\" style=\"stroke:grey\" />\n    <line x1=\"30\" y1=\"54\" x2=\"294\" y2=\"54\" style=\"stroke:grey\" />\n    <line x1=\"30\" y1=\"98\" x2=\"294\" y2=\"98\" style=\"stroke:grey\" />\n    <line x1=\"30\" y1=\"142\" x2=\"294\" y2=\"142\" style=\"stroke:grey\" />\n    <line x1=\"30\" y1=\"186\" x2=\"294\" y2=\"186\" style=\"stroke:grey\" />\n    <line x1=\"30\" y1=\"230\" x2=\"294\" y2=\"230\" style=\"stroke:grey\" />\n    <line x1=\"30\" y1=\"274\" x2=\"294\" y2=\"274\" style=\"stroke:grey\" />\n    <line x1=\"30\" y1=\"10\" x2=\"30\" y2=\"274\" style=\"stroke:grey\" />\n    <line x1=\"74\" y1=\"10\" x2=\"74\" y2=\"274\" style=\"stroke:grey\" />\n    <line x1=\"118\" y1=\"10\" x2=\"118\" y2=\"274\" style=\"stroke:grey\" />\n    <line x1=\"162\" y1=\"10\" x2=\"162\" y2=\"274\" style=\"stroke:grey\" />\n    <line x1=\"206\" y1=\"10\" x2=\"206\" y2=\"274\" style=\"stroke:grey\" />\n    <line x1=\"250\" y1=\"10\" x2=\"250\" y2=\"274\" style=\"stroke:grey\" />\n    <line x1=\"294\" y1=\"10\" x2=\"294\" y2=\"274\" style=\"stroke:grey\" />\n    <text x=\"16\" y=\"292\" fill=\"black\">-30</text>\n    <text x=\"60\" y=\"292\" fill=\"black\">-20</text>\n    <text x=\"104\" y=\"292\" fill=\"black\">-10</text>\n    <text x=\"157\" y=\"292\" fill=\"black\">0</text>\n    <text x=\"195\" y=\"292\" fill=\"black\">10</text>\n    <text x=\"239\" y=\"292\" fill=\"black\">20</text>\n    <text x=\"280\" y=\"292\" fill=\"black\">30</text>\n    <text x=\"7\" y=\"15\" fill=\"black\">60</text>\n    <text x=\"7\" y=\"59\" fill=\"black\">50</text>\n    <text x=\"7\" y=\"103\" fill=\"black\">40</text>\n    <text x=\"7\" y=\"147\" fill=\"black\">30</text>\n    <text x=\"7\" y=\"191\" fill=\"black\">20</text>\n    <text x=\"7\" y=\"235\" fill=\"black\">10</text>\n    <text x=\"7\" y=\"279\" fill=\"black\">0</text>\n    <text x=\"90\" y=\"268\" fill=\"grey\">Température extérieure (°C)</text>\n    <text x=\"34\" y=\"25\" fill=\"grey\">Température circuit (°C)</text>\n    <line id=\"Cab\" x1=\"162\" y1=\"274\" x2=\"162\" y2=\"274\" style=\"stroke:blue\" />\n    <line id=\"Cbc\" x1=\"162\" y1=\"274\" x2=\"162\" y2=\"274\" style=\"stroke:blue\" />\n    <line id=\"Ccd\" x1=\"162\" y1=\"274\" x2=\"162\" y2=\"274\" style=\"stroke:blue\" />\n    <line id=\"Sab\" x1=\"162\" y1=\"274\" x2=\"162\" y2=\"274\" style=\"stroke:green\" />\n    <line id=\"Sbc\" x1=\"162\" y1=\"274\" x2=\"162\" y2=\"274\" style=\"stroke:green\" />\n    <line id=\"px\" x1=\"162\" y1=\"274\" x2=\"162\" y2=\"274\" style=\"stroke:red\" stroke-dasharray=\"5,5\" />\n    <line id=\"py\" x1=\"162\" y1=\"274\" x2=\"162\" y2=\"274\" style=\"stroke:red\" stroke-dasharray=\"5,5\" />\n    <circle id=\"p\" cx=\"162\" cy=\"274\" r=\"4\" fill=\"Red\" />\n</svg>",
        "clickableShapes": [],
        "javascriptHandlers": [],
        "smilAnimations": [],
        "bindings": [
            {
                "selector": "#Cab",
                "bindSource": "payload.Cax",
                "bindType": "attr",
                "attribute": "x1"
            },
            {
                "selector": "#Cab",
                "bindSource": "payload.Caby",
                "bindType": "attr",
                "attribute": "y1"
            },
            {
                "selector": "#Cab",
                "bindSource": "payload.Cbx",
                "bindType": "attr",
                "attribute": "x2"
            },
            {
                "selector": "#Cab",
                "bindSource": "payload.Caby",
                "bindType": "attr",
                "attribute": "y2"
            },
            {
                "selector": "#Cbc",
                "bindSource": "payload.Cbx",
                "bindType": "attr",
                "attribute": "x1"
            },
            {
                "selector": "#Cbc",
                "bindSource": "payload.Caby",
                "bindType": "attr",
                "attribute": "y1"
            },
            {
                "selector": "#Cbc",
                "bindSource": "payload.Ccdx",
                "bindType": "attr",
                "attribute": "x2"
            },
            {
                "selector": "#Cbc",
                "bindSource": "payload.Ccy",
                "bindType": "attr",
                "attribute": "y2"
            },
            {
                "selector": "#Ccd",
                "bindSource": "payload.Ccdx",
                "bindType": "attr",
                "attribute": "x1"
            },
            {
                "selector": "#Ccd",
                "bindSource": "payload.Ccy",
                "bindType": "attr",
                "attribute": "y1"
            },
            {
                "selector": "#Ccd",
                "bindSource": "payload.Ccdx",
                "bindType": "attr",
                "attribute": "x2"
            },
            {
                "selector": "#Ccd",
                "bindSource": "payload.Cdy",
                "bindType": "attr",
                "attribute": "y2"
            },
            {
                "selector": "#px",
                "bindSource": "payload.px",
                "bindType": "attr",
                "attribute": "x1"
            },
            {
                "selector": "#px",
                "bindSource": "payload.py",
                "bindType": "attr",
                "attribute": "y1"
            },
            {
                "selector": "#px",
                "bindSource": "payload.Cax",
                "bindType": "attr",
                "attribute": "x2"
            },
            {
                "selector": "#px",
                "bindSource": "payload.py",
                "bindType": "attr",
                "attribute": "y2"
            },
            {
                "selector": "#py",
                "bindSource": "payload.px",
                "bindType": "attr",
                "attribute": "x1"
            },
            {
                "selector": "#py",
                "bindSource": "payload.py",
                "bindType": "attr",
                "attribute": "y1"
            },
            {
                "selector": "#py",
                "bindSource": "payload.px",
                "bindType": "attr",
                "attribute": "x2"
            },
            {
                "selector": "#py",
                "bindSource": "payload.Cdy",
                "bindType": "attr",
                "attribute": "y2"
            },
            {
                "selector": "#p",
                "bindSource": "payload.px",
                "bindType": "attr",
                "attribute": "cx"
            },
            {
                "selector": "#p",
                "bindSource": "payload.py",
                "bindType": "attr",
                "attribute": "cy"
            },
            {
                "selector": "#Sab",
                "bindSource": "payload.Sax",
                "bindType": "attr",
                "attribute": "x1"
            },
            {
                "selector": "#Sab",
                "bindSource": "payload.Saby",
                "bindType": "attr",
                "attribute": "y1"
            },
            {
                "selector": "#Sab",
                "bindSource": "payload.Sbcx",
                "bindType": "attr",
                "attribute": "x2"
            },
            {
                "selector": "#Sab",
                "bindSource": "payload.Saby",
                "bindType": "attr",
                "attribute": "y2"
            },
            {
                "selector": "#Sbc",
                "bindSource": "payload.Sbcx",
                "bindType": "attr",
                "attribute": "x1"
            },
            {
                "selector": "#Sbc",
                "bindSource": "payload.Saby",
                "bindType": "attr",
                "attribute": "y1"
            },
            {
                "selector": "#Sbc",
                "bindSource": "payload.Sbcx",
                "bindType": "attr",
                "attribute": "x2"
            },
            {
                "selector": "#Sbc",
                "bindSource": "payload.Scy",
                "bindType": "attr",
                "attribute": "y2"
            }
        ],
        "showCoordinates": false,
        "autoFormatAfterEdit": false,
        "showBrowserErrors": false,
        "showBrowserEvents": false,
        "enableJsDebugging": true,
        "sendMsgWhenLoaded": false,
        "noClickWhenDblClick": false,
        "outputField": "payload",
        "editorUrl": "//drawsvg.org/drawsvg.html",
        "directory": "",
        "panning": "disabled",
        "zooming": "disabled",
        "panOnlyWhenZoomed": false,
        "doubleClickZoomEnabled": false,
        "mouseWheelZoomEnabled": false,
        "dblClickZoomPercentage": 150,
        "cssString": "div.ui-svg svg{\n    color: var(--nr-dashboard-widgetColor);\n    fill: currentColor !important;\n}\ndiv.ui-svg path {\n    fill: inherit;\n}",
        "name": "Courbe chauffage",
        "x": 890,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "95518256e355930d",
        "type": "inject",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "5e87d797b2fffefb",
                "5f9487b61521a4df",
                "14ead4468e468644",
                "e5d4f38d497e9f95",
                "f4a7b6860ca2945f",
                "8e2b91874ad1f7f3",
                "5c6fcc422d5cda6b"
            ]
        ]
    },
    {
        "id": "e623245db17448cb",
        "type": "debug",
        "z": "1cbfa6c610f9a210",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 300,
        "wires": []
    },
    {
        "id": "1999241fb90d3072",
        "type": "inject",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 620,
        "wires": [
            [
                "2872b980c2bf2476"
            ]
        ]
    },
    {
        "id": "93006bd7de94f9f5",
        "type": "inject",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 660,
        "wires": [
            [
                "691464965711c8d4"
            ]
        ]
    },
    {
        "id": "2872b980c2bf2476",
        "type": "shutdown",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "x": 340,
        "y": 620,
        "wires": []
    },
    {
        "id": "691464965711c8d4",
        "type": "restart",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "x": 330,
        "y": 660,
        "wires": []
    },
    {
        "id": "5e87d797b2fffefb",
        "type": "OS",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "x": 330,
        "y": 300,
        "wires": [
            [
                "e623245db17448cb"
            ]
        ]
    },
    {
        "id": "5f9487b61521a4df",
        "type": "Drives",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "x": 330,
        "y": 340,
        "wires": [
            [
                "e623245db17448cb"
            ]
        ]
    },
    {
        "id": "14ead4468e468644",
        "type": "Uptime",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "x": 340,
        "y": 380,
        "wires": [
            [
                "e623245db17448cb"
            ]
        ]
    },
    {
        "id": "e5d4f38d497e9f95",
        "type": "CPUs",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "x": 330,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "f4a7b6860ca2945f",
        "type": "Loadavg",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "x": 340,
        "y": 460,
        "wires": [
            [
                "e623245db17448cb"
            ]
        ]
    },
    {
        "id": "8e2b91874ad1f7f3",
        "type": "Memory",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "scale": "Byte",
        "x": 340,
        "y": 500,
        "wires": [
            [
                "e623245db17448cb"
            ]
        ]
    },
    {
        "id": "5c6fcc422d5cda6b",
        "type": "NetworkIntf",
        "z": "1cbfa6c610f9a210",
        "name": "",
        "x": 350,
        "y": 540,
        "wires": [
            [
                "e623245db17448cb"
            ]
        ]
    },
    {
        "id": "e52ebd6896361d41",
        "type": "debug",
        "z": "0fba407004275a36",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 200,
        "wires": []
    },
    {
        "id": "0c2940718680112a",
        "type": "inject",
        "z": "0fba407004275a36",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 480,
        "wires": [
            [
                "7ae15ceb396d6165",
                "98827411daa2ea34"
            ]
        ]
    },
    {
        "id": "b7f736cb36c6ac96",
        "type": "inject",
        "z": "0fba407004275a36",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "2",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "7ae15ceb396d6165",
                "98827411daa2ea34"
            ]
        ]
    },
    {
        "id": "080f9788f9186578",
        "type": "inject",
        "z": "0fba407004275a36",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "3",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 600,
        "wires": [
            [
                "7ae15ceb396d6165",
                "98827411daa2ea34"
            ]
        ]
    },
    {
        "id": "7ae15ceb396d6165",
        "type": "debug",
        "z": "0fba407004275a36",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 540,
        "wires": []
    },
    {
        "id": "98827411daa2ea34",
        "type": "function",
        "z": "0fba407004275a36",
        "name": "function 5",
        "func": "let test = {\n    \"1\": null,\n    \"2\": null,\n    \"3\": null\n}\n\ntest[msg.topic] = msg.payload;\n\nmsg.payload = test;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 640,
        "wires": [
            [
                "bb6ae046b70b898c"
            ]
        ]
    },
    {
        "id": "bb6ae046b70b898c",
        "type": "debug",
        "z": "0fba407004275a36",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 640,
        "wires": []
    },
    {
        "id": "76907eb2ea45ef34",
        "type": "debug",
        "z": "0fba407004275a36",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 320,
        "wires": []
    },
    {
        "id": "d9dc6cccb0f72708",
        "type": "inject",
        "z": "0fba407004275a36",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "911a8dc2df685c10"
            ]
        ]
    },
    {
        "id": "911a8dc2df685c10",
        "type": "openweathermap",
        "z": "0fba407004275a36",
        "d": true,
        "name": "",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "Les Genevez",
        "country": "Switzerland",
        "language": "fr",
        "x": 290,
        "y": 320,
        "wires": [
            [
                "76907eb2ea45ef34"
            ]
        ]
    },
    {
        "id": "fc41f428b7e53ef0",
        "type": "openweathermap in",
        "z": "0fba407004275a36",
        "d": true,
        "name": "",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "Les Genevez",
        "country": "Switzerland",
        "language": "fr",
        "x": 290,
        "y": 360,
        "wires": [
            [
                "76907eb2ea45ef34"
            ]
        ]
    },
    {
        "id": "9fe4be61ee872268",
        "type": "ui_ui_control",
        "z": "0fba407004275a36",
        "name": "",
        "events": "all",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "e52ebd6896361d41"
            ]
        ]
    },
    {
        "id": "c55778a44510b3f4",
        "type": "ha-switch",
        "z": "0fba407004275a36",
        "d": true,
        "name": "s 2",
        "version": 0,
        "debugenabled": false,
        "inputs": 0,
        "outputs": 2,
        "entityConfig": "b895c8447c24bf3d",
        "enableInput": false,
        "outputOnStateChange": true,
        "outputProperties": [
            {
                "property": "outputType",
                "propertyType": "msg",
                "value": "state change",
                "valueType": "str"
            },
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "x": 370,
        "y": 980,
        "wires": [
            [
                "79a262ddb72d11c4"
            ],
            [
                "4994a8efe0c21aa0"
            ]
        ]
    },
    {
        "id": "8687a0a93a8240d0",
        "type": "ha-sensor",
        "z": "0fba407004275a36",
        "d": true,
        "name": "hr",
        "entityConfig": "c8b43f2e06c4ab65",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 350,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "be8911c396aa7ce6",
        "type": "inject",
        "z": "0fba407004275a36",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1100,
        "wires": [
            [
                "8687a0a93a8240d0"
            ]
        ]
    },
    {
        "id": "f6729da3e724a8a5",
        "type": "inject",
        "z": "0fba407004275a36",
        "d": true,
        "name": "true",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 960,
        "wires": [
            [
                "071cb517b907c195"
            ]
        ]
    },
    {
        "id": "19986ac504f773f4",
        "type": "inject",
        "z": "0fba407004275a36",
        "d": true,
        "name": "false",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 170,
        "y": 1000,
        "wires": [
            [
                "071cb517b907c195"
            ]
        ]
    },
    {
        "id": "c8b2b12bea77e067",
        "type": "inject",
        "z": "0fba407004275a36",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "bc171953c9cd278e",
        "type": "ha-sensor",
        "z": "0fba407004275a36",
        "d": true,
        "name": "nb",
        "entityConfig": "c8b43f2e06c4ab65",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 350,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "91143cf8ea1c4e30",
        "type": "inject",
        "z": "0fba407004275a36",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "88",
        "payloadType": "num",
        "x": 170,
        "y": 1160,
        "wires": [
            [
                "bc171953c9cd278e"
            ]
        ]
    },
    {
        "id": "89bdf5ad9008c6e3",
        "type": "inject",
        "z": "0fba407004275a36",
        "d": true,
        "name": "0",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 170,
        "y": 1200,
        "wires": [
            [
                "bc171953c9cd278e"
            ]
        ]
    },
    {
        "id": "071cb517b907c195",
        "type": "ha-binary-sensor",
        "z": "0fba407004275a36",
        "d": true,
        "name": "bin",
        "entityConfig": "4e375c64d933c529",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 370,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "31d75b23e0924f18",
        "type": "ha-button",
        "z": "0fba407004275a36",
        "d": true,
        "name": "btn",
        "version": 0,
        "debugenabled": false,
        "outputs": 1,
        "entityConfig": "970366e645f206a4",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "x": 350,
        "y": 860,
        "wires": [
            [
                "69de7d744cbcfbcf"
            ]
        ]
    },
    {
        "id": "69de7d744cbcfbcf",
        "type": "debug",
        "z": "0fba407004275a36",
        "d": true,
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 860,
        "wires": []
    },
    {
        "id": "79a262ddb72d11c4",
        "type": "debug",
        "z": "0fba407004275a36",
        "d": true,
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 960,
        "wires": []
    },
    {
        "id": "4994a8efe0c21aa0",
        "type": "debug",
        "z": "0fba407004275a36",
        "d": true,
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1000,
        "wires": []
    },
    {
        "id": "687cc7e7d4ab62ed",
        "type": "comment",
        "z": "0fba407004275a36",
        "name": "Commandes terminal",
        "info": "node-red-start - this starts the Node-RED service and displays its log output. Pressing Ctrl-C or closing the window does not stop the service; it keeps running in the background\nnode-red-stop - this stops the Node-RED service\nnode-red-restart - this stops and restarts the Node-RED service\nnode-red-log - this displays the log output of the service",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "4d9889814eb99784",
        "type": "debug",
        "z": "0fba407004275a36",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1380,
        "wires": []
    },
    {
        "id": "82a92c4dbc93ac8a",
        "type": "file",
        "z": "0fba407004275a36",
        "name": "parameters",
        "filename": "/home/pi/parameters.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 310,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "0d5cf0ceb6fe1f1d",
        "type": "inject",
        "z": "0fba407004275a36",
        "name": "JSON",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"a\":22,\"b\":true,\"c\":\"abc\"}",
        "payloadType": "json",
        "x": 170,
        "y": 1380,
        "wires": [
            [
                "82a92c4dbc93ac8a"
            ]
        ]
    },
    {
        "id": "796cecbebf638771",
        "type": "file in",
        "z": "0fba407004275a36",
        "name": "",
        "filename": "/home/pi/parameters.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 410,
        "y": 1320,
        "wires": [
            [
                "07aa01477633c36a"
            ]
        ]
    },
    {
        "id": "07aa01477633c36a",
        "type": "debug",
        "z": "0fba407004275a36",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1320,
        "wires": []
    },
    {
        "id": "cabbd42b0556a423",
        "type": "inject",
        "z": "0fba407004275a36",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1320,
        "wires": [
            [
                "796cecbebf638771"
            ]
        ]
    },
    {
        "id": "8fe8fd1d1c2fcb40",
        "type": "ui_text_input",
        "z": "0fba407004275a36",
        "name": "",
        "label": "txt",
        "tooltip": "",
        "group": "a3d953c2586eeab6",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 470,
        "y": 1380,
        "wires": [
            [
                "4d9889814eb99784"
            ]
        ]
    }
]